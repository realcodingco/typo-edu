{
    "title": "함수 1",
    "id": "8f0c2b45",
    "time": 1673238035622,
    "pages": [{"f0761077":{"title":"함수란 무엇인가","id":"f0761077","time":1674699575161,"content":[{"comp":"title","order":"1","enter":"2","text":"함수란 무엇인가","style":[]},{"comp":"text","order":"2","enter":"2","text":"함수(Function)는 어떤 동작을 수행하기 위한 문(statement)을 하나로 모은 코드 블록입니다.","style":[{"target":"(Function)","type":"font-size:small;"},{"target":"함수","type":"font-size:xx-large;color: #0079BF;"},{"target":"(statement)","type":"font-size:small;"}]},{"comp":"check","order":"3","enter":"0","id":"680dcab2","text":"함수는 이름과 매개변수를 가질 수 있으며, 필요할 때에 호출할 수 있습니다.","style":[]},{"comp":"text","order":"4","enter":"2","text":"필요에 따라 여러번 호출할 수 있기 때문에, 코드의 재사용을 가능하도록 해 함수를 활용하면 효율적인 프로그래밍을 할 수 있습니다.","style":[]},{"comp":"check","order":"5","enter":"0","id":"4a1b71b3","text":"함수도 객체이므로, 변수, 객체, 배열 등에 저장할 수 있고, ","style":[]},{"comp":"check","order":"6","enter":"3","id":"d25d8598","text":"다른 함수의 인수로 사용하거나 반환값이 될 수 있습니다.","style":[]},{"comp":"text","order":"7","enter":"3","text":"함수를 만들기 위해서는 키워드 function을 사용합니다.","style":[{"target":"function","type":"color:#FF726B;font-size:x-large;"}]},{"comp":"text","order":"8","enter":"2","text":"다음은 함수의 기본 사용 입니다.","style":[]},{"comp":"par","order":"9","enter":"3","style":"margin:0 auto;width:80%;background: #282A35;color:white;border-radius:10px;padding:10px;font-family:IBM Plex Mono;font-size:17px;","text":"<font color=#6571A0>// 함수 생성(정의)</font>\n<font color=#EC7FC1>function</font> 함수명(<font color=#FFBC6B >매개변수</font>) <font color=#00A1FF>{</font>\n&nbsp;&nbsp;&nbsp;&nbsp;수행문;\n<font color=#00A1FF>}</font>\n\n<font color=#6571A0>// 함수 사용(호출)</font>\n함수명<font color=#00A1FF>(</font>인수<font color=#00A1FF>)</font>;\n"},{"comp":"text","order":"10","enter":"0","text":"function 키워드와 함수명, 매개변수를 차례로 입력하고, ","style":[]},{"comp":"text","order":"11","enter":"3","text":"중괄호로 수행문 코드를 묶어 함수를 생성합니다.","style":[]},{"comp":"text","order":"12","enter":"4","text":"함수를 사용할 때는 함수명과 인수를 사용합니다.","style":[]},{"comp":"check","order":"13","enter":"6","id":"77842c1f","text":"이와 같은 함수 정의 방식을 '함수 선언문'이라고 합니다.","style":[]}]}},{"e13c4fbf":{"title":"함수정의 : 함수 선언문","id":"e13c4fbf","time":1674701189950,"content":[{"comp":"title","order":"1","enter":"2","text":"함수정의 : 함수 선언문","style":[]},{"comp":"text","order":"2","enter":"2","text":"함수 선언문(Function declaration) 방식으로 정의한 함수에 대해 살펴보겠습니다.","style":[{"target":"(Function declaration)","type":"font-size:small;"}]},{"comp":"text","order":"3","enter":"0","text":"다음의 코드는 함수 선언문의 예시 입니다.","style":[]},{"comp":"aceEditor","order":"4","enter":"3","height":"105","start":"","text":"function plus(a, b) {\n    return a + b;\n}","style":[]},{"comp":"check","order":"5","enter":"3","id":"0525c79b","text":"위의 코드에서 함수명은 plus 이며, 함수 선언문에서는 함수명을 생략할 수 없습니다.","style":[]},{"comp":"check","order":"6","enter":"0","id":"af85e9a9","text":"매개변수는 콤마로 구분된 0개 이상의 목록을 괄호로 감싸야 합니다.","style":[]},{"comp":"text","order":"7","enter":"3","text":"자바스크립트에서는 함수의 매개변수 타입을 별도로 작성하지 않습니다.","style":[]},{"comp":"text","order":"8","enter":"0","text":"수행문의 집합은 중괄호로 감싸고,","style":[]},{"comp":"check","order":"9","enter":"3","id":"8ae7a3eb","text":"return문을 사용해 결과값을 반환할 수 있으며 이를, 반환값이라고 합니다.","style":[]},{"comp":"text","order":"10","enter":"4","text":"즉, plus 함수는 2개 매개변수(a, b)를 전달받아 두 수를 더한 결과값을 반환합니다.","style":[]},{"comp":"direction","order":"11","enter":"16","codeId":"5593fcb4","targetLine":"","title":"함수 선언문","text":"그렇다면, 두 수를 전달받아 두 수의 곱셈 결과값을 반환하는 함수 multiple을 함수 선언문으로 작성해 보세요.","bgCode":"","style":[]},{"comp":"text","order":"12","enter":"0","text":"다음과 같이 작성할 수 있습니다.","style":[]},{"comp":"aceEditor","order":"13","enter":"8","height":"105","start":"","text":"function multiple(a, b) {\n    return a * b;\n}","style":[]}]}},{"7420a8c3":{"title":"함수정의 : 함수 표현식","id":"7420a8c3","time":1674702943369,"content":[{"comp":"title","order":"1","enter":"2","text":"함수정의 : 함수 표현식","style":[]},{"comp":"text","order":"2","enter":"0","text":"함수 표현식(Function expression)은 함수 리터럴 방식으로 함수를 정의하는 방식을 말합니다.","style":[{"target":"(Function expression)","type":"font-size:small;"}]},{"comp":"text","order":"3","enter":"2","text":"이는 하나의 표현식으로 변수에 할당할 수 있습니다.","style":[]},{"comp":"check","order":"4","enter":"0","id":"601aefd5","text":"따라서, 함수 표현식의 정의는 함수 선언문과 달리, 함수명을 생략할 수 있습니다.","style":[]},{"comp":"text","order":"5","enter":"2","text":"이를 익명함수(anonymous function)라고 합니다.","style":[{"target":"(anonymous function)","type":"font-size:small;"}]},{"comp":"text","order":"6","enter":"0","text":"다음은 함수 표현식 정의의 예시 입니다.","style":[]},{"comp":"aceEditor","order":"7","enter":"6","height":"105","start":"","text":"let plus = function(a, b) {\n    return a + b;\n};","style":[]},{"comp":"text","order":"8","enter":"0","text":"함수명 생략 여부에 따라 기명 함수 표현식과 익명  함수 표현식으로 나뉘는데, ","style":[]},{"comp":"check","order":"9","enter":"4","id":"03f39c60","text":"기명 함수 표현식의 경우, 함수명이 아닌 함수 표현식이 할당된 변수명을 사용해 호출해야 합니다.","style":[]},{"comp":"direction","order":"10","enter":"0","codeId":"c676f3e1","targetLine":"","title":"기명 함수 표현식","text":"에디터를 열고, 다음의 코드를 실행해 보세요.","bgCode":"let add = function plus(a, b) {\n    return a + b;\n};\nplus(3, 5);","style":[]},{"comp":"aceEditor","order":"11","enter":"10","height":"130","start":"","text":"let add = function plus(a, b) {\n    return a + b;\n};\nplus(3, 5);","style":[]},{"comp":"text","order":"12","enter":"0","text":"위는 기명 함수 표현식으로 함수명을 사용해 호출하면 오류가 발생합니다.","style":[]},{"comp":"text","order":"13","enter":"0","text":"따라서, 함수명이 아닌 변수명 add를 사용해 호출해야 합니다.","style":[]},{"comp":"direction","order":"14","enter":"0","codeId":"b6b63c50","targetLine":"","title":"기명 함수 표현식","text":"4라인의 코드를 변수명 add를 사용해 호출하도록 수정하고 실행해 보세요.","bgCode":"let add = function plus(a, b) {\n    return a + b;\n};\nplus(3, 5);","style":[]},{"comp":"aceEditor","order":"15","enter":"12","height":"50","start":"4","text":"add(3, 5);","style":[]},{"comp":"check","order":"16","enter":"6","id":"3a0da4bb","text":"변수명을 사용해 호출하면 오류가 발생하지 않음을 확인할 수 있습니다.","style":[]}]}},{"5ed58c55":{"title":"함수정의 : Function 생성자","id":"5ed58c55","time":1674702969313,"content":[{"comp":"title","order":"1","enter":"2","text":"함수정의 : Function 생성자","style":[]},{"comp":"text","order":"2","enter":"2","text":"Function 생성자로 함수를 정의하는 문법은 다음과 같습니다.","style":[]},{"comp":"par","order":"3","enter":"3","style":"margin:0 auto;width:80%;text-align:center;padding: 3px;background: #E6E6EF;font-family:IBM Plex Mono;font-size:17px;border-radius:5px;color: #406784;","text":"new Function(매개변수1, 매개변수2, ..., 수행문)"},{"comp":"text","order":"4","enter":"0","text":"코드로 살펴보겠습니다.","style":[]},{"comp":"aceEditor","order":"5","enter":"3","height":"80","start":"","text":"let plus = new Function('a', 'b', 'return a + b');\nprint(plus(3, 5));","style":[]},{"comp":"text","order":"6","enter":"0","text":"위는 new Function 생성자를 사용해 plus 함수를 정의한 예시입니다.","style":[]},{"comp":"text","order":"7","enter":"5","text":"이와 같은 함수 정의는 일반적으로 사용하지 않지만, 앞에서 살펴본 함수 선언문과 함수 표현식은 이러한 생성자 함수 정의의 축약이라고 볼 수 있습니다. ","style":[]},{"comp":"text","order":"8","enter":"2","text":"지금까지 살펴본 함수 정의 방식에는 동작의 차이가 있습니다. ","style":[]},{"comp":"check","order":"9","enter":"2","id":"52f24992","text":"선언 위치와 상관없이 어느 곳에서든 호출이 가능한 것을 함수 호이스팅이라고 합니다.","style":[{"target":"함수 호이스팅","type":"font-size:x-large;color:#A70FFF;"}]},{"comp":"direction","order":"10","enter":"0","codeId":"29ac5434","targetLine":"","title":"함수 호이스팅","text":"다음의 코드를 따라서 입력하고 실행해 보세요.","bgCode":"","style":[]},{"comp":"aceEditor","order":"11","enter":"10","height":"130","start":"","text":"sayHi();\nfunction sayHi() {\n    alert('hi');\n}","style":[]},{"comp":"text","order":"12","enter":"4","text":"함수 선언 전에 1라인에서 함수를 호출했지만, 동작합니다.","style":[]},{"comp":"text","order":"13","enter":"0","text":"그렇다면 함수 표현식은 어떤지 살펴보겠습니다.","style":[]},{"comp":"direction","order":"14","enter":"0","codeId":"c208b61c","targetLine":"","title":"함수 호이스팅","text":"다음의 코드를 따라서 입력하고 실행해 보세요.","bgCode":"","style":[]},{"comp":"aceEditor","order":"15","enter":"10","height":"130","start":"","text":"sayHi();\nlet sayHi = function() {\n    alert('hi');\n};","style":[]},{"comp":"text","order":"16","enter":"2","text":"초기화 전에는 'sayHi'에 접근할 수 없다는 오류 메시지를 확인할 수 있습니다.","style":[{"target":"초기화 전에는 'sayHi'에 접근할 수 없다","type":"color:red;"}]},{"comp":"direction","order":"17","enter":"10","codeId":"f931706f","targetLine":"1","title":"함수 호이스팅","text":"1라인의 함수 호출 코드를 5라인으로 이동시키고 실행해 보세요.","bgCode":"sayHi();\nlet sayHi = function() {\n    alert('hi');\n};\n","style":[]},{"comp":"text","order":"18","enter":"0","text":"정상적으로 동작하는 것을 확인할 수 있습니다.","style":[]},{"comp":"aceEditor","order":"19","enter":"3","height":"150","start":"","text":"\nlet sayHi = function() { // 함수표현식의 선언\n    alert('hi');\n};\nsayHi(); // 함수 호출","style":[]},{"comp":"check","order":"20","enter":"6","id":"b4d0d97d","text":"이는 함수 표현식은 함수 호이스팅이 아니라, 변수 호이스팅이 이뤄졌기 때문에 발생하는 차이입니다.","style":[]}]}},{"1d7455a4":{"title":"return","id":"1d7455a4","time":1674709513777,"content":[{"comp":"title","order":"1","enter":"2","text":"return","style":[]},{"comp":"text","order":"2","enter":"3","text":"함수는 수행 결과값을 반환할 수 있습니다. 이때 사용하는 키워드는 return 입니다.","style":[{"target":"return","type":"background:#D80412;color:white;padding:2px;"}]},{"comp":"check","order":"3","enter":"0","id":"f182149e","text":"반환은 생략이 가능합니다. 이 경우, undefined를 암묵적으로 반환합니다.","style":[]},{"comp":"aceEditor","order":"4","enter":"3","height":"80","start":"","text":"function hi(){}\nprint(hi()); // undefined ","style":[]},{"comp":"check","order":"5","enter":"0","id":"79ba2a92","text":"배열 등을 사용해 하나 이상을 값을 반환할 수도 있습니다.","style":[]},{"comp":"aceEditor","order":"6","enter":"3","height":"180","start":"","text":"function exchange(won) {\n    let dollar = won * 0.00081;\n    let yen = won * 0.11;\n    return [dollar + '달러', yen + '엔']; // 여러 값 반환\n}\nlet result = exchange(10000);","style":[]},{"comp":"check","order":"7","enter":"2","id":"a37e657c","text":"함수 수행문 중에 return을 만나면 함수는 실행을 중단합니다.","style":[]},{"comp":"direction","order":"8","enter":"0","codeId":"fdc3a4c9","targetLine":"","title":"함수 return","text":"다음의 코드를 따라서 입력하고 실행해 보세요.","bgCode":"","style":[]},{"comp":"aceEditor","order":"9","enter":"10","height":"180","start":"","text":"function play() {\n    print(1);\n    return;\n    print(2);\n}\nplay();","style":[]},{"comp":"text","order":"10","enter":"0","text":"코드실행 결과, return 이전의 2라인의 숫자 1은 출력되지만,","style":[]},{"comp":"text","order":"11","enter":"0","text":"return 이후인 4라인의 숫자 2는 출력되지 않습니다.","style":[]},{"comp":"aceEditor","order":"12","enter":"6","height":"180","start":"","text":"function play() {\n    print(1); // 1\n    return;   // 실행 중단\n    print(2);\n}\nplay();","style":[]}]}}],
    "icon": "undraw_functions_re_alho.svg"
}