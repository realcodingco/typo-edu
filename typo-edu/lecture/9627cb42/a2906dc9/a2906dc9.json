{
    "title": "데이터",
    "id": "a2906dc9",
    "time": 1672900105779,
    "pages": [{"d57543be":{"title":"데이터 자료형","id":"d57543be","time":1673837420858,"content":[{"comp":"title","order":"1","enter":"2","text":"데이터 자료형","style":[]},{"comp":"text","order":"2","enter":"2","text":"자바스크립트에서 사용하는 모든 데이터는 자료형(data type)을 가집니다. ","style":[{"target":"자료형","type":"font-size:xx-large;color:purple;"}]},{"comp":"check","order":"3","enter":"3","id":"d3c15a02","text":"자료형은 크게 원시 타입과 객체(참조) 타입으로 나뉩니다.","style":[{"target":"원시","type":"color:blue;font-size:28px;"},{"target":"객체","type":"color:red;font-size:28px;"},{"target":"(참조)","type":"color:red;"}]},{"comp":"text","order":"4","enter":"0","text":"원시타입은 변경이 불가능한 값으로, 불변성(immutable)을 특징으로 합니다.","style":[{"target":"원시타입","type":"font-size:x-large;color:green;"},{"target":"불변성(immutable)","type":"box-shadow: inset 0 -6px 0 #FF66D1;"}]},{"comp":"text","order":"5","enter":"2","text":"이는 실제 데이터 값을 저장합니다.","style":[]},{"comp":"text","order":"6","enter":"4","text":"변수 선언과 데이터를 할당하는 과정에서 메모리 영역에 어떤 변화가 있는지 알아보겠습니다.","style":[]},{"comp":"image","order":"7","enter":"2","width":"180","src":"./lecture/9627cb42/a2906dc9/memory1.png","style":[]},{"comp":"text","order":"8","enter":"4","text":"위는 변수 a가 선언되었을 때, 빈(초기화) 값의 메모리가 생성된 것을 나타냅니다.","style":[{"target":"(초기화)","type":"font-size:small;"}]},{"comp":"image","order":"9","enter":"2","width":"180","src":"./lecture/9627cb42/a2906dc9/memory2.png","style":[]},{"comp":"text","order":"10","enter":"3","text":"변수에 값이 할당되면 변수가 선언된 메모리의 값이 변경되는 것이 아니라, 할당된 값의 메모리가 새로 생성됩니다. ","style":[]},{"comp":"image","order":"11","enter":"2","width":"180","src":"./lecture/9627cb42/a2906dc9/memory3.png","style":[]},{"comp":"text","order":"12","enter":"4","text":"그리고 값이 재할당되어도 마찬가지입니다.","style":[]},{"comp":"text","order":"13","enter":"2","text":"원시타입 데이터에 해당하는 타입은 다음과 같습니다.","style":[]},{"comp":"tableHVH","order":"14","enter":"5","width":"450","column":"6","arr":"number,string,boolean,null,undefined,symbol","style":[]},{"comp":"text","order":"15","enter":"0","text":"객체 타입은 참조형 타입이라고도 하며, ","style":[{"target":"객체 타입","type":"font-size:x-large;color:#1C00D8;"}]},{"comp":"check","order":"16","enter":"3","id":"d5c18a25","text":"원시타입을 제외한 나머지 타입을 모두 객체타입으로 볼 수 있습니다.","style":[{"target":"원시타입을 제외한 나머지 타입","type":"box-shadow: inset 0 -8px 0 #F1FF8E;"}]},{"comp":"text","order":"17","enter":"3","text":"객체 타입 데이터의 메모리 변화는 원시타입과 어떤 차이를 보이는지 알아보겠습니다.","style":[]},{"comp":"image","order":"18","enter":"2","width":"400","src":"./lecture/9627cb42/a2906dc9/memory4.png","style":[]},{"comp":"text","order":"19","enter":"0","text":"위에서 보는 것처럼 obj 객체가 선언되면 변수 영역(@339800a)이 생성됩니다.","style":[{"target":"(@339800a)","type":"color:gray;font-size:13px;"}]},{"comp":"text","order":"20","enter":"2","text":"그리고 객체가 가진 2개 프로퍼티(a, b)의 정보를 저장합니다.","style":[{"target":"(a, b)","type":"color:gray;font-size:13px;"}]},{"comp":"check","order":"21","enter":"3","id":"a3ff3d7a","text":"이때, 저장하는 값은 데이터 값이 아닌, 그 데이터가 담긴 메모리 주소입니다.","style":[]},{"comp":"text","order":"22","enter":"0","text":"만약, a 프로퍼티의 값을 100으로 재할당 한다면, ","style":[]},{"comp":"text","order":"23","enter":"2","text":"다음과 같이 데이터 100을 저장하고 있는 메모리 주소로 변경됩니다.","style":[]},{"comp":"image","order":"24","enter":"4","width":"400","src":"./lecture/9627cb42/a2906dc9/memory5.png","style":[]},{"comp":"text","order":"25","enter":"0","text":"원시 타입의 경우, 값이 재할당되면 값이 변경되지 않고 메모리가 교체되지만,","style":[]},{"comp":"check","order":"26","enter":"6","id":"717e0bc7","text":"객체 타입은 변수영역의 메모리 값이 변경되는 차이가 있다고 볼 수 있습니다.","style":[]}]}},{"5fe969dd":{"title":"숫자 데이터","id":"5fe969dd","time":1673851315856,"content":[{"comp":"title","order":"1","enter":"2","text":"Number 타입","style":[]},{"comp":"text","order":"2","enter":"0","text":"숫자는 정수, 실수, 음수, 2 / 8 / 16 진수 등 세분화 할 수 있지만,","style":[]},{"comp":"text","order":"3","enter":"3","text":"자바스크립트에서의 숫자형은 단 하나의 숫자 타입인 실수로 처리됩니다.","style":[{"target":"실수","type":"background:#8F2FD8;color:white;"}]},{"comp":"text","order":"4","enter":"1","text":"다음은 다양한 타입의 숫자 데이터 값을 변수에 대입한 코드입니다. ","style":[]},{"comp":"aceEditor","order":"5","enter":"1","height":"180","start":"","text":"var integer = 27;       // 정수\nvar real = 13.25;       // 실수\nvar negative = -40;     // 음수\nvar binary = 0b1100010; // 2진수\nvar octal = 0o101;      // 8진수\nvar hex = 0x76;         // 16진수","style":[]},{"comp":"sup","order":"6","enter":"4","text":"* 진수 표기법 : 2진수는 0b, 8진수는 0o, 16진수는 0x를 숫자 앞에 붙입니다.","style":[{"target":"* 진수 표기법 : 2진수는 0b, 8진수는 0o, 16진수는 0x를 숫자 앞에 붙입니다.","type":"font-size:12px; color: #00AA80;"}]},{"comp":"direction","order":"7","enter":"0","codeId":"051e104d","targetLine":"7","title":"Number 타입","text":"다음의 코드를 따라서 입력하고 실행해서 결과를 확인해 보세요.","bgCode":"var integer = 27;       // 정수\nvar real = 13.25;       // 실수\nvar negative = -40;     // 음수\nvar binary = 0b1100010; // 2진수\nvar octal = 0o101;      // 8진수\nvar hex = 0x76;         // 16진수\n","style":[]},{"comp":"aceEditor","order":"8","enter":"10","height":"100","start":"7","text":"print(binary);\nprint(octal);\nprint(hex);","style":[]},{"comp":"check","order":"9","enter":"0","id":"3dc53cf7","text":"모두 10진수로 변환된 실수값이 출력되는 것을 확인할 수 있습니다.","style":[]},{"comp":"aceEditor","order":"10","enter":"2","height":"100","start":"7","text":"print(binary); // 98\nprint(octal);  // 65\nprint(hex);    // 118","style":[]},{"comp":"text","order":"11","enter":"1","text":"즉, 숫자 데이터를 2진수, 8진수 등으로 나눠서 사용할 수 있지만, ","style":[]},{"comp":"text","order":"12","enter":"0","text":"10진수로 변환된 값으로 판단되므로, 결과값이 같은 것으로 처리될 수 있습니다.","style":[]},{"comp":"direction","order":"13","enter":"0","codeId":"1fdaab21","targetLine":"3","title":"","text":"다음의 코드를 실행해 결과를 확인해보세요.","bgCode":"var binary = 0b1100010; // 2진수\nvar octal = 0o142;      // 8진수\nprint(binary === octal);","style":[]},{"comp":"aceEditor","order":"14","enter":"8","height":"100","start":"","text":"var binary = 0b1100010; // 2진수\nvar octal = 0o142;      // 8진수\nprint(binary === octal);","style":[]},{"comp":"text","order":"15","enter":"0","text":"binary와 octal 변수값이 모두 98로 동일하게 판단돼 true를 출력합니다.","style":[{"target":"true","type":"color:#E100FF;"}]},{"comp":"aceEditor","order":"16","enter":"8","height":"100","start":"","text":"var binary = 0b1100010;  // 98\nvar octal = 0o142;       // 98\nprint(binary === octal); // true","style":[]},{"comp":"text","order":"17","enter":"0","text":"또, 정수로 표기되어도 이는 실수와 같다는 결과를 얻습니다.","style":[]},{"comp":"direction","order":"18","enter":"0","codeId":"d25ec391","targetLine":"3","title":"Number 타입","text":"다음에서 3라인에 변수 a와 b가 같은지 출력하도록 코드를 완성하고, 실행해 보세요.","bgCode":"var a = 12;\nvar b = 12.0;\n// print를 사용해 a와 b가 같은지 출력해보세요.","style":[]},{"comp":"aceEditor","order":"19","enter":"10","height":"100","start":"","text":"var a = 12;\nvar b = 12.0;\n// print를 사용해 a와 b가 같은지 출력해보세요.","style":[]},{"comp":"text","order":"20","enter":"0","text":"실행결과, 다음과 같은 결과를 얻을 수 있습니다.","style":[]},{"comp":"aceEditor","order":"21","enter":"6","height":"50","start":"3","text":"print(a === b); // true","style":[]},{"comp":"text","order":"22","enter":"2","text":"숫자 데이터에는 다음의 특별한 값도 있습니다.","style":[]},{"comp":"check","order":"23","enter":"2","id":"6fe049a0","text":"Infinity : 양의 무한대","style":[{"target":"Infinity","type":"background: #D1F4FF;padding: 5px;border-radius:5px;color: #5B7FFF;"}]},{"comp":"check","order":"24","enter":"2","id":"10ccf02d","text":"-Infinity : 음의 무한대","style":[{"target":"-Infinity","type":"background: #D1F4FF;padding: 5px;border-radius:5px;color: #5B7FFF;"}]},{"comp":"check","order":"25","enter":"4","id":"de71c5ba","text":"NaN : 산술불가(not a number)","style":[{"target":"NaN","type":"background: #D1F4FF;padding: 5px;border-radius:5px;color: #5B7FFF;"}]},{"comp":"direction","order":"26","enter":"0","codeId":"4e4ae4ae","targetLine":"","title":"Number 타입","text":"다음의 코드를 실행해보세요.","bgCode":"var positiveInf = 10 / 0;\nvar negativeInf = 10 / -0;\nprint(positiveInf);\nprint(negativeInf);","style":[]},{"comp":"aceEditor","order":"27","enter":"10","height":"130","start":"","text":"var positiveInf = 10 / 0;\nvar negativeInf = 10 / -0;\nprint(positiveInf);\nprint(negativeInf);","style":[]},{"comp":"check","order":"28","enter":"0","id":"0a76a210","text":"각각 Infinity와 -Infinity가 출력되는 것을 확인할 수 있습니다.","style":[]},{"comp":"aceEditor","order":"29","enter":"4","height":"130","start":"","text":"var positiveInf = 10 / 0;\nvar negativeInf = 10 / -0;\nprint(positiveInf); // Infinity\nprint(negativeInf); // -Infinity","style":[]},{"comp":"text","order":"30","enter":"0","text":"그리고 숫자가 아닌 문자열 데이터와의 연산은 \"연산이 불가능함\"을 의미하는 NaN 값으로 나타납니다.","style":[{"target":"NaN","type":"background:#FF66D1;color:white;padding:2px;"}]},{"comp":"direction","order":"31","enter":"1","codeId":"4c2dc228","targetLine":"","title":"Number 타입","text":"다음의 코드를 실행해 보세요.","bgCode":"var result = 1 * 'word';\nprint(result);","style":[]},{"comp":"aceEditor","order":"32","enter":"10","height":"80","start":"","text":"var result = 1 * 'word';\nprint(result);","style":[]},{"comp":"text","order":"33","enter":"0","text":"변수 result 에는 숫자 1과 문자열 'word'의 곱의 연산이 대입되었습니다.","style":[]},{"comp":"text","order":"34","enter":"0","text":"따라서 숫자가 아닌 데이터와의 연산이므로 NaN이 출력됩니다.","style":[]},{"comp":"aceEditor","order":"35","enter":"6","height":"80","start":"","text":"var result = 1 * 'word';\nprint(result); // NaN","style":[]},{"comp":"text","order":"36","enter":"1","text":"만약, 프로그램에서 숫자 데이터만 사용해야 하는 경우라면","style":[]},{"comp":"text","order":"37","enter":"8","text":"NaN 값을 사용한 예외 처리로 숫자 외 의 데이터 사용을 방지할 수 있습니다.","style":[{"target":"NaN 값을 사용한 예외 처리","type":"box-shadow: inset 0 -6px 0 #99FFB7;"}]}]}},{"300dbfdf":{"title":"문자열 데이터","id":"300dbfdf","time":1673851711143,"content":[{"comp":"title","order":"1","enter":"2","text":"String 타입","style":[]},{"comp":"text","order":"2","enter":"0","text":"문자열 타입은 텍스트 데이터를 나타냅니다.","style":[]},{"comp":"check","order":"3","enter":"0","id":"fd90eb11","text":"문자열 데이터는 텍스트를 큰 따옴표(\"\")나 작은 따옴표('') 혹은 백틱(``) 기호로 감싼 형태로 만들 수 있습니다.","style":[{"target":"큰 따옴표(\"\")","type":"box-shadow: inset 0 -4px 0 #007FA5;"},{"target":"작은 따옴표('')","type":"box-shadow: inset 0 -4px 0 #007FA5;"},{"target":"백틱(``)","type":"box-shadow: inset 0 -4px 0 #007FA5;"}]},{"comp":"sup","order":"4","enter":"2","text":"* 백틱 기호 사용을 위한 키는 숫자1 키 왼쪽에 있습니다.","style":[{"target":"* 백틱 기호 사용을 위한 키는 숫자1 키 왼쪽에 있습니다.","type":"font-size:10px;color:#22AED8;"}]},{"comp":"text","order":"5","enter":"0","text":"다음은 문자열 데이터 사용의 예시 코드입니다.","style":[]},{"comp":"aceEditor","order":"6","enter":"4","height":"100","start":"","text":"var duty = 'Jerry'; // 작은 따옴표\nduty = \"Terra\";     // 큰 따옴표\nduty = `jin`;       // 백틱","style":[]},{"comp":"text","order":"7","enter":"0","text":"텍스트에 따옴표 사용이 필요한 경우에는 ","style":[]},{"comp":"text","order":"8","enter":"0","text":"사용할 따옴표와 반대되는 기호로 감싼 문자열 데이터로 생성하면 됩니다.","style":[]},{"comp":"sup","order":"9","enter":"3","text":"큰 따옴표 ↔ 작은 따옴표","style":[{"target":"큰 따옴표 ↔ 작은 따옴표","type":"font-size:12px; color:#FF5177;"}]},{"comp":"direction","order":"10","enter":"0","codeId":"c7998509","targetLine":"","title":"String 타입","text":"다음의 코드에서 적절한 기호를 사용해 문자열 데이터를 완성해보세요.","bgCode":"var message = he say \"Hello!\";","style":[]},{"comp":"aceEditor","order":"11","enter":"10","height":"50","start":"","text":"var message = he say \"Hello!\";","style":[]},{"comp":"text","order":"12","enter":"0","text":"위의 문자열 데이터에는 큰 따옴표가 필요하므로, 다음과 같이 작은 따옴표로 감싸면 됩니다. ","style":[{"target":"작은 따옴표","type":"text-emphasis: circle #FF848A;"}]},{"comp":"aceEditor","order":"13","enter":"4","height":"50","start":"","text":"var message = 'he say \"Hello!\"';","style":[]},{"comp":"text","order":"14","enter":"0","text":"또는 이스케이프 문자를 사용하면 중복된 따옴표의 사용이 가능합니다.","style":[]},{"comp":"sup","order":"15","enter":"0","text":"* 이스케이프 문자(escape character)는 다음 문자가 특수문자임을 알리는 역할을 하며, 백슬러시(\\)를 사용합니다.","style":[{"target":"* 이스케이프 문자(escape character)는 다음 문자가 특수문자임을 알리는 역할을 하며, 백슬러시(\\)를 사용합니다.","type":"font-size:12px; color: #D87075;"}]},{"comp":"aceEditor","order":"16","enter":"2","height":"50","start":"","text":"var message = \"he say \\\"Hello!\\\"\";","style":[]},{"comp":"text","order":"17","enter":"0","text":"Hello! 앞 뒤로 큰 따옴표가 사용되었으며, 각각의 따옴표 앞에는 백슬러시가 사용되었습니다.","style":[]},{"comp":"text","order":"18","enter":"8","text":"그리고 큰 따옴표(중복사용)로 감싸 문자열을 완성했습니다.","style":[{"target":"(중복사용)","type":"font-size:small;color:gray;"}]},{"comp":"text","order":"19","enter":"2","text":"문자열 데이터는 유사배열로, 각 문자에 대해 접근할 수 있습니다. ","style":[{"target":"유사배열","type":"box-shadow: inset 0 -6px 0 #FF75F8;"}]},{"comp":"text","order":"20","enter":"0","text":"다음은 address 변수에 대입된 문자열의 2번째 문자를 출력하는 코드입니다.","style":[{"target":"2번째","type":"text-emphasis: circle #392BD8;"}]},{"comp":"direction","order":"21","enter":"1","codeId":"1431275a","targetLine":"","title":"String 타입","text":"코드를 그대로 따라서 입력하고 실행해 보세요.","bgCode":"","style":[]},{"comp":"aceEditor","order":"22","enter":"1","height":"80","start":"","text":"var address = '서울 강남구';\nprint(address[1]);","style":[]},{"comp":"sub","order":"23","enter":"12","text":"* 첫번째 인덱스는 0부터 시작합니다. 따라서 2번째를 가리키는 인덱스는 1입니다.","style":[{"target":"* 첫번째 인덱스는 0부터 시작합니다. 따라서 2번째를 가리키는 인덱스는 1입니다.","type":"font-size: 11px;color: gray;"}]},{"comp":"text","order":"24","enter":"0","text":"코드를 실행하면, '서울 강남구'의 2번째 문자인 '울'이 출력됩니다.","style":[]},{"comp":"aceEditor","order":"25","enter":"6","height":"80","start":"","text":"var address = '서울 강남구';\nprint(address[1]);  // '울'","style":[]},{"comp":"check","order":"26","enter":"0","id":"84c2ffe4","text":"그러나, 이미 생성된 문자열의 일부 문자를 변경할 수는 없습니다.","style":[]},{"comp":"direction","order":"27","enter":"0","codeId":"61b1a964","targetLine":"2","title":"String 타입","text":"다음의 코드와 같이 수정하고 실행해 보세요.","bgCode":"var address = '서울 강남구';\nprint(address[1]);  // '울'","style":[]},{"comp":"aceEditor","order":"28","enter":"10","height":"100","start":"","text":"var address = '서울 강남구';\naddress[4] = '서';\nprint(address);  ","style":[]},{"comp":"text","order":"29","enter":"0","text":"'서울 강남구'의 5번째 문자를 '서'로 변경하였으므로, '서울 강서구'가 출력되어야 겠지만","style":[{"target":"남","type":"text-emphasis: circle #38FF3E;"}]},{"comp":"text","order":"30","enter":"2","text":"read only로 변경할 수 없다는 오류 메시지가 출력됩니다.","style":[]},{"comp":"par","order":"31","enter":"3","style":"color: red; text-align:center;font-size:16px;","text":"[ERROR] cannot assign to read only property '4' of string '서울 강남구'"},{"comp":"check","order":"32","enter":"10","id":"9f709557","text":"이는 문자열 데이터의 불변성(immutable)의 특징 때문입니다.","style":[{"target":"불변성(immutable)","type":"box-shadow: inset 0 -20px 0 #E9B7FF;"}]}]}},{"2cb4aa1c":{"title":"boolean / null / undefined","id":"2cb4aa1c","time":1673870766237,"content":[{"comp":"title","order":"1","enter":"2","text":"boolean / null / undefined 타입","style":[]},{"comp":"text","order":"2","enter":"0","text":"불리언(boolean) 타입은 논리적으로 참, 거짓을 나타내는 데이터를 말합니다.","style":[{"target":"불리언","type":"font-size:xx-large;color:#2D8FFF;"},{"target":"논리적으로 참, 거짓을 나타내는 데이터","type":"box-shadow: inset 0 -4px 0 #2DD5FF;"}]},{"comp":"check","order":"3","enter":"3","id":"78e01e63","text":"여기에는 true와 false가 있습니다.","style":[{"target":"true","type":"color: #FF8B51;"},{"target":"false","type":"color: #FF8B51;"}]},{"comp":"text","order":"4","enter":"2","text":"따라서 비교 연산을 통한 참, 거짓의 조건이 필요한 데이터를 다루는 조건문에서 주로 사용됩니다.","style":[]},{"comp":"text","order":"5","enter":"0","text":"다음은 false로 간주되는 데이터 입니다.","style":[{"target":"false","type":"color: #D81ED5;"}]},{"comp":"direction","order":"6","enter":"0","codeId":"9f5e6b9b","targetLine":"5","title":"불리언 타입","text":"코드를 실행해 결과를 확인해보세요.","bgCode":"var a = Boolean('');        // 빈 문자열\nvar b = Boolean(0);         // 숫자 0\nvar c = Boolean(null);      // null\nvar d = Boolean(undefined); // undefined\nprint(a, b, c, d);","style":[]},{"comp":"aceEditor","order":"7","enter":"10","height":"160","start":"","text":"var a = Boolean('');        // 빈 문자열\nvar b = Boolean(0);         // 숫자 0\nvar c = Boolean(null);      // null\nvar d = Boolean(undefined); // undefined\nprint(a, b, c, d);","style":[]},{"comp":"check","order":"8","enter":"0","id":"fe471480","text":"Boolean 함수는 전달된 값의 참, 거짓 여부를 반환합니다.","style":[]},{"comp":"text","order":"9","enter":"0","text":"실행 결과,","style":[]},{"comp":"text","order":"10","enter":"8","text":"빈 문자열, 숫자 0, null, undefined 모두 false로 출력되는 것을 확인할 수 있습니다.","style":[{"target":"빈 문자열, 숫자 0, null, undefined","type":"box-shadow: inset 0 -4px 0 #FFA8D9;"},{"target":"false","type":"color:#FF66AA;"}]},{"comp":"text","order":"11","enter":"0","text":"null 타입은 값이 없음을 나타냅니다.","style":[{"target":"null","type":"font-size:xx-large;color:#FF7723;"},{"target":"값이 없음","type":"box-shadow: inset 0 -20px 0 #D8841E;color:white;"}]},{"comp":"check","order":"12","enter":"2","id":"4af8bc07","text":"null 값은 참조된 메모리 주소를 제거하는 역할도 합니다.","style":[]},{"comp":"aceEditor","order":"13","enter":"2","height":"80","start":"","text":"var foo = 100;\nfoo = null;","style":[]},{"comp":"text","order":"14","enter":"0","text":"위의 2라인에서 foo 변수에 null 값이 대입되었으므로","style":[]},{"comp":"text","order":"15","enter":"6","text":"foo 변수는 어떤 값도 가리키고 있지 않은 상태가 됩니다.","style":[]},{"comp":"text","order":"16","enter":"0","text":"undefined 타입은 변수가 선언된 후 값이 할당되지 않은 초기값을 나타냅니다.","style":[{"target":"undefined","type":"font-size:xx-large;color:#7D15D8;"},{"target":"초기값","type":"box-shadow: inset 0 -24px 0 #D89EFF;color:white;padding:2px;"}]},{"comp":"check","order":"17","enter":"0","id":"13e88188","text":"따라서 의도적으로 undefined 값을 할당하는 것은 권장하지 않습니다.","style":[]},{"comp":"text","order":"18","enter":"8","text":"값이 없음을 나타내고자 한다면 null을 사용하는 것이 좋습니다.","style":[]}]}},{"b25c9a49":{"title":"Symbol","id":"b25c9a49","time":1673876825956,"content":[{"comp":"title","order":"1","enter":"2","text":"Symbol","style":[]},{"comp":"text","order":"2","enter":"1","text":"Symbol은 ES6에서 새롭게 추가된 7번째 데이터 타입으로, ","style":[]},{"comp":"check","order":"3","enter":"2","id":"32a8077d","text":"값의 변경이 불가능한 원시 타입 입니다.","style":[]},{"comp":"text","order":"4","enter":"2","text":"이는 유일한 식별자를 만드는데 사용할 수 있습니다.","style":[{"target":"유일한 식별자","type":"box-shadow: inset 0 -4px 0 #ABFF84;"}]},{"comp":"check","order":"5","enter":"0","id":"36094bd8","text":"다음의 코드와 같이 Symbol은 Symbol 함수로 생성합니다.","style":[{"target":"Symbol 함수","type":"background: #FFE27A;font-size:x-large;color:#3C54D8;"}]},{"comp":"aceEditor","order":"6","enter":"2","height":"50","start":"","text":"let privateSymbol = Symbol();","style":[]},{"comp":"text","order":"7","enter":"0","text":"이때, new 생성자를 사용하면 오류가 발생합니다.","style":[]},{"comp":"direction","order":"8","enter":"0","codeId":"752603fb","targetLine":"","title":"Symbol 타입","text":"다음의 코드를 따라서 입력하고 실행해 보세요.","bgCode":"","style":[]},{"comp":"aceEditor","order":"9","enter":"12","height":"50","start":"","text":"let privateSymbol = new Symbol();","style":[]},{"comp":"par","order":"10","enter":"0","style":"color:red; text-align:center;","text":"[ERROR] Symbol is not a constructor"},{"comp":"text","order":"11","enter":"0","text":"Symbol은 생성자가 아니라는 오류 메시지를 확인할 수 있습니다.","style":[]},{"comp":"direction","order":"12","enter":"10","codeId":"7312094c","targetLine":"","title":"Symbol 타입","text":"new를 삭제하고 다시 실행해 보세요.","bgCode":"let privateSymbol = new Symbol();","style":[]},{"comp":"text","order":"13","enter":"2","text":"이번에는 privateSymbol 변수를 출력해 보겠습니다.","style":[]},{"comp":"direction","order":"14","enter":"0","codeId":"28037a5c","targetLine":"","title":"Symbol 타입","text":"다음의 2라인과 같이 따라서 입력하고 실행해보세요.","bgCode":"let privateSymbol = Symbol();","style":[]},{"comp":"aceEditor","order":"15","enter":"12","height":"80","start":"","text":"let privateSymbol = Symbol();\nprint(privateSymbol);","style":[]},{"comp":"par","order":"16","enter":"0","style":"color:red;text-align:center;","text":"[ERROR] Cannot convert a Symbol value to a string"},{"comp":"text","order":"17","enter":"0","text":"Symbol의 value 값을 문자열로 변환할 수 없다는 오류 메시지를 확인할 수 있습니다.","style":[]},{"comp":"text","order":"18","enter":"5","text":"이는 Symbol 타입이 자동 형변환이 되지 않는 타입이기 때문입니다.","style":[]},{"comp":"check","order":"19","enter":"0","id":"be2b4799","text":"이런 경우, description을 사용하면 내용을 확인할 수 있습니다.","style":[{"target":"description","type":"background:#8EFFBD;color: #007261;padding:3px;"}]},{"comp":"direction","order":"20","enter":"1","codeId":"b3cdd9cb","targetLine":"2","title":"Symbol 타입","text":"description를 추가하고 다시 실행해보세요.","bgCode":"let privateSymbol = Symbol();\nprint(privateSymbol);","style":[]},{"comp":"aceEditor","order":"21","enter":"12","height":"80","start":"","text":"let privateSymbol = Symbol();\nprint(privateSymbol.description);","style":[]},{"comp":"text","order":"22","enter":"0","text":"사용된 이름이 없기 때문에 undefined가 출력됩니다.","style":[]},{"comp":"text","order":"23","enter":"4","text":"Symbol('id')와 같이 'id'라는 이름을 사용하면 'id'가 출력됩니다.","style":[{"target":"Symbol('id')","type":"padding:3px;border-radius:3px;background:lightgray;color:gray;"}]},{"comp":"check","order":"24","enter":"0","id":"a438514f","text":"Symbol은 유일한 식별자를 만들기 때문에 같은 이름을 사용해도 다른 값으로 인식됩니다. ","style":[{"target":"같은 이름을 사용해도 다른 값으로 인식","type":"box-shadow: inset 0 -4px 0 #FFADDC;"}]},{"comp":"direction","order":"25","enter":"0","codeId":"d4088aff","targetLine":"1","title":"Symbol 타입","text":"다음의 코드를 따라서 입력하고 실행해 보세요.","bgCode":"let symbol1 = \nlet symbol2 = \nprint();","style":[]},{"comp":"aceEditor","order":"26","enter":"12","height":"100","start":"","text":"let symbol1 = Symbol('id');\nlet symbol2 = Symbol('id');\nprint(symbol1 === symbol2);","style":[]},{"comp":"text","order":"27","enter":"0","text":"다른 값을 의미하는 false가 출력되는 것을 확인할 수 있습니다.","style":[]},{"comp":"aceEditor","order":"28","enter":"4","height":"100","start":"","text":"let symbol1 = Symbol('id');\nlet symbol2 = Symbol('id');\nprint(symbol1 === symbol2); // false","style":[]},{"comp":"text","order":"29","enter":"0","text":"이처럼 Symbol은 이름이 같아도 모두 다른 값으로 처리되는데,","style":[]},{"comp":"text","order":"30","enter":"0","text":"프로그램 내에서 같은 Symbol 값에 접근해야 하는 경우가 있을 수 있습니다.","style":[]},{"comp":"text","order":"31","enter":"3","text":"그럴 때에는 전역 심볼을 만들어 사용하면 됩니다.","style":[]},{"comp":"check","order":"32","enter":"0","id":"dfb86ca7","text":"전역 심볼은 Symbol.for를 사용합니다.","style":[{"target":"Symbol.for","type":"padding: 3px; background: #C5FFAD;font-size:x-large;color:#00631C;"}]},{"comp":"direction","order":"33","enter":"0","codeId":"b26cf836","targetLine":"","title":"Symbol.for","text":"다음의 코드를 따라서 입력하고 실행해 보세요.","bgCode":"","style":[]},{"comp":"aceEditor","order":"34","enter":"10","height":"100","start":"","text":"let id1 = Symbol.for('id');\nlet id2 = Symbol.for('id');\nprint(id1 === id2);","style":[]},{"comp":"text","order":"35","enter":"0","text":"위에서 1라인은 id 이름의 심볼을 읽어, 존재하지 않으면 심볼을 생성합니다.","style":[]},{"comp":"text","order":"36","enter":"0","text":"2라인에서도 id라는 이름의 심볼을 읽습니다. ","style":[]},{"comp":"text","order":"37","enter":"6","text":"따라서, id1과 id2가 같은 값인지 비교하면 true를 출력하게 됩니다.","style":[{"target":"true","type":"color: #A338D8;"}]},{"comp":"text","order":"38","enter":"0","text":"그리고 전역 심볼의 이름을 알고 싶을때, Symbol.keyFor를 사용할 수 있습니다.","style":[{"target":"Symbol.keyFor","type":"padding: 3px; background: #FFBCEB;font-size:x-large;color:#D83878;"}]},{"comp":"direction","order":"39","enter":"0","codeId":"b413daf6","targetLine":"","title":"Symbol.keyFor","text":"다음의 코드를 실행해 보세요.","bgCode":"var globalSymbol = Symbol.for('id');\nvar localSymbol = Symbol('id');\nprint(Symbol.keyFor(globalSymbol));\nprint(Symbol.keyFor(localSymbol));","style":[]},{"comp":"aceEditor","order":"40","enter":"10","height":"130","start":"","text":"var globalSymbol = Symbol.for('id');\nvar localSymbol = Symbol('id');\nprint(Symbol.keyFor(globalSymbol));\nprint(Symbol.keyFor(localSymbol));","style":[]},{"comp":"text","order":"41","enter":"0","text":"Symbol.keyFor를 사용해 이름을 출력했을 때, ","style":[]},{"comp":"text","order":"42","enter":"0","text":"전역 심볼인 globalSymbol의 경우, 이름 'id'가 출력되지만,","style":[]},{"comp":"text","order":"43","enter":"0","text":"일반 심볼인 localSymbol의 이름은 undefined로 출력되는 것을 확인할 수 있습니다.","style":[]},{"comp":"aceEditor","order":"44","enter":"9","height":"130","start":"","text":"var globalSymbol = Symbol.for('id'); // 전역 심볼\nvar localSymbol = Symbol('id');      // 일반 심볼\nprint(Symbol.keyFor(globalSymbol));  // id\nprint(Symbol.keyFor(localSymbol));   // undefined","style":[]},{"comp":"text","order":"45","enter":"2","text":"이번에는 symbol이 어떻게 사용될 수 있는지 알아보겠습니다.","style":[]},{"comp":"text","order":"46","enter":"0","text":"외부 코드에서 가져온 객체 데이터를 사용할 때, 새로운 프로퍼티를 사용하는 것에 주의해야 합니다.","style":[]},{"comp":"text","order":"47","enter":"4","text":"이럴 때 symbol을 사용한 프로퍼티 생성은 서로의 코드에서 발생할 수 있는 충돌 가능성을 낮춰줄 수 있습니다.","style":[]},{"comp":"text","order":"48","enter":"0","text":"다음의 코드로 살펴볼까요?","style":[]},{"comp":"aceEditor","order":"49","enter":"2","height":"160","start":"","text":"let user = {  // 외부 코드 객체\n    name : 'henry'\n};\nuser.id = 'outside_id'; // 외부 생성 프로퍼티\nuser.id = 'inside_id'; // 내부 생성 프로퍼티","style":[]},{"comp":"text","order":"50","enter":"0","text":"외부에서 user라는 객체를 가져왔고, 위와 같이 동일한 프로퍼티 이름인 'id'로 각각 생성했다면","style":[]},{"comp":"text","order":"51","enter":"4","text":"의도치 않은 충돌이 발생하게 됩니다. ","style":[]},{"comp":"text","order":"52","enter":"0","text":"이럴 때, Symbol을 사용한 프로퍼티를 생성하면 이름이 같더라도 유일성이 보장되므로 충돌을 피할 수 있습니다.","style":[]},{"comp":"aceEditor","order":"53","enter":"2","height":"180","start":"","text":"let user = {  // 외부 코드 객체\n    name : 'henry'\n};\nuser.id = 'outside_id'; // 외부 생성 프로퍼티\nlet id = Symbol('id'); \nuser[id] = 'inside_id'; // 내부 생성 프로퍼티","style":[]},{"comp":"text","order":"54","enter":"0","text":"위의 5, 6라인은 Symbol을 사용한 프로퍼티 생성과 사용의 코드입니다.","style":[]},{"comp":"text","order":"55","enter":"0","text":"이와 같이 사용하면 반복문으로 객체의 프로퍼티를 탐색할 때 symbol 프로퍼티는 배제됩니다.","style":[]},{"comp":"sup","order":"56","enter":"6","text":"* Object.keys / for ... in","style":[{"target":"* Object.keys / for ... in","type":"font-size: 12px; color:#137F7A;"}]},{"comp":"text","order":"57","enter":"0","text":"다음의 코드는 Symbol 프로퍼티를 사용한 예시 코드입니다.","style":[]},{"comp":"aceEditor","order":"58","enter":"2","height":"160","start":"","text":"let id = Symbol.for('id'); \nlet user = {  \n    name : 'henry',\n    [id] : 'male' // Symbol 프로퍼티 사용\n};","style":[]},{"comp":"text","order":"59","enter":"0","text":"4라인에서 id 라는 이름의 symbol 프로퍼티를 사용했습니다.","style":[]},{"comp":"check","order":"60","enter":"6","id":"a2c8c43b","text":"이와 같이 symbol 프로퍼티는 [] 기호를 사용한 심볼형 키를 사용해야 합니다.","style":[{"target":"[] 기호를 사용한 심볼형 키","type":"box-shadow: inset 0 -6px 0 #75B3FF;"}]},{"comp":"text","order":"61","enter":"0","text":"이번에는 symbol 프로퍼티에 직접 접근해 값을 가져와 보겠습니다.","style":[]},{"comp":"direction","order":"62","enter":"0","codeId":"4ab270dd","targetLine":"6","title":"Symbol 프로퍼티 접근","text":"다음과 같이 6, 7라인의 코드를 추가하고 실행해 보세요.","bgCode":"let id = Symbol.for('id'); \nlet user = {  \n    name : 'henry',\n    [id] : 'male' // Symbol 프로퍼티 사용\n};\n","style":[]},{"comp":"aceEditor","order":"63","enter":"12","height":"210","start":"","text":"let id = Symbol.for('id'); \nlet user = {  \n    name : 'henry',\n    [id] : 'male' // Symbol 프로퍼티 사용\n};\nprint(user.id); // key name 사용\nprint(user[id]); // 직접적인 사용","style":[]},{"comp":"text","order":"64","enter":"0","text":"6라인은 undefined를, 7라인은 'male'을 출력합니다.","style":[]},{"comp":"text","order":"65","enter":"6","text":"7라인과 같이 직접 접근하는 방법을 통해 해당 symbol 프로퍼티 값을 가져올 수 있습니다.","style":[]}]}},{"bdeb503c":{"title":"템플릿 리터럴","id":"bdeb503c","time":1673928073167,"content":[{"comp":"title","order":"1","enter":"2","text":"템플릿 리터럴","style":[]},{"comp":"text","order":"2","enter":"0","text":"템플릿 리터럴(Tempelete leterals)은 내장된 표현식을 허용하는 문자열 리터럴입니다.","style":[{"target":"템플릿 리터럴","type":"font-size: x-large;color:#470082;"},{"target":"(Tempelete leterals)","type":"font-size:small;"}]},{"comp":"text","order":"3","enter":"3","text":"이는 따옴표 대신 백틱( ` ) 기호를 사용합니다","style":[{"target":"백틱( ` )","type":"box-shadow: inset 0 -6px 0 #AE89FF;"}]},{"comp":"check","order":"4","enter":"4","id":"c03e90fa","text":"리터럴은 소스 코드에 입력된 그대로의 값을 말합니다.","style":[]},{"comp":"aceEditor","order":"5","enter":"2","height":"130","start":"","text":"var age = 30;\nvar obj = {  // 객체 리터럴\n    id : 'id',\n}","style":[]},{"comp":"text","order":"6","enter":"0","text":"위의 코드에서 age 변수에 대입된 숫자 30은 리터럴로 볼 수 있습니다.","style":[]},{"comp":"text","order":"7","enter":"5","text":"그리고 obj 변수에 대입된 { } 기호로 둘러싼 값을 객체 리터럴 이라고 합니다.","style":[{"target":"객체 리터럴","type":"box-shadow: inset 0 -6px 0 #A8FF89;"}]},{"comp":"text","order":"8","enter":"2","text":"일반적인 문자열 데이터는 줄내림을 허용하지 않습니다.","style":[]},{"comp":"aceEditor","order":"9","enter":"2","height":"80","start":"","text":"var sentence = \"안녕하세요.\n만나서 반갑습니다.\";","style":[]},{"comp":"text","order":"10","enter":"6","text":"위 코드 1라인 오류 표시에 마우스를 갖다대면 '닫히지 않은 문자열(Unclosed string)' 이라는 오류 메시지를 확인할 수 있습니다.","style":[{"target":"닫히지 않은 문자열(Unclosed string)","type":"color:red;"}]},{"comp":"direction","order":"11","enter":"0","codeId":"b6866578","targetLine":"","title":"템플릿 리터럴","text":"따옴표 대신 백틱을 사용해 템플릿 리터럴로 수정하고 실행해 보세요.","bgCode":"var sentence = \"안녕하세요.\n만나서 반갑습니다.\";\nalert(sentence);","style":[]},{"comp":"aceEditor","order":"12","enter":"1","height":"100","start":"","text":"var sentence = `안녕하세요.\n만나서 반갑습니다.`;\nalert(sentence);","style":[]},{"comp":"sub","order":"13","enter":"10","text":"* alert(text) : text가 입력된 경고 대화상자를 띄웁니다. ","style":[{"target":"* alert(text) : text가 입력된 경고 대화상자를 띄웁니다. ","type":"font-size:12px;color:#B9A9D8;"}]},{"comp":"text","order":"14","enter":"0","text":"이와 같이 사용하면 줄내림을 포함해 ","style":[]},{"comp":"text","order":"15","enter":"5","text":"백틱 기호 사이에 구문을 입력된 그대로 사용할 수 있습니다.","style":[]},{"comp":"text","order":"16","enter":"2","text":"그럼, 템플릿 리터럴 문자열에 백틱 기호가 포함되어 있다면 어떻게 해야 할까요? ","style":[{"target":"문자열에 백틱 기호가 포함되어 있다면","type":"box-shadow: inset 0 -6px 0 #99F9FF;"}]},{"comp":"aceEditor","order":"17","enter":"2","height":"80","start":"","text":"let backtick = `\\` 백틱 키는 숫자 1키 왼쪽에 있습니다.`;\nalert(backtick);","style":[]},{"comp":"check","order":"18","enter":"10","id":"b501c4a4","text":"위와 같이 사용할 백틱기호 앞에 역슬래시(\\)를 함께 사용해야 합니다.","style":[{"target":"역슬래시(\\)","type":"color:blue;"}]},{"comp":"text","order":"19","enter":"2","text":"이번에는 문자열의 조합에 대해 살펴보겠습니다.","style":[]},{"comp":"text","order":"20","enter":"2","text":"일반적인 문자열의 조합에는 + 기호를 사용합니다.","style":[]},{"comp":"aceEditor","order":"21","enter":"2","height":"140","start":"","text":"let age = 32;\nlet address = '강남구';\nlet combine = '나이는 ' + age + '살이고, 주소는 ' + address + '입니다.';\nalert(combine);","style":[]},{"comp":"text","order":"22","enter":"0","text":"combine 변수에는 변수 age와 address, 그리고 + 기호를 사용한 문자열 조합이 대입되었습니다.","style":[]},{"comp":"direction","order":"23","enter":"10","codeId":"c42a1e16","targetLine":"3","title":"일반 문자열의 조합","text":"코드를 실행해보세요.","bgCode":"let age = 32;\nlet address = '강남구';\nlet combine = '나이는 ' + age + '살이고, 주소는 ' + address + '입니다.';\nalert(combine);","style":[]},{"comp":"text","order":"24","enter":"2","text":"템플릿 리터럴에서는 표현식을 삽입하는 방식으로 문자열을 조합할 수 있습니다.","style":[]},{"comp":"direction","order":"25","enter":"0","codeId":"e34610bd","targetLine":"3","title":"템플릿 리터럴","text":"다음의 3라인 코드로 수정하고, 실행해 보세요.","bgCode":"let age = 32;\nlet address = '강남구';\nlet combine = '나이는 ' + age + '살이고, 주소는 ' + address + '입니다.';\nalert(combine);","style":[]},{"comp":"aceEditor","order":"26","enter":"10","height":"140","start":"","text":"let age = 32;\nlet address = '강남구';\nlet combine = `나이는 ${age}살이고, 주소는 ${address}입니다.`;\nalert(combine);","style":[]},{"comp":"text","order":"27","enter":"0","text":"이처럼 + 기호를 사용하지 않고도 ","style":[]},{"comp":"check","order":"28","enter":"5","id":"38f9e4fb","text":"템플릿 리터럴에 ${ }의 기호를 사용해 문자열을 조합할 수 있습니다. ","style":[{"target":"${ }","type":"color: #D3009E;"}]},{"comp":"check","order":"29","enter":"2","id":"3d41ab2b","text":"교재학습이 완료되었습니다.","style":[{"target":"교재학습이 완료되었습니다.","type":"font-size:20px;color:gray;"}]},{"comp":"ending","order":"30","enter":"6","style":[]}]}}],
    "icon": "undraw_data_re_80ws.svg"
}