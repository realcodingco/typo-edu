
{
    "title": "타입변환/체크",
    "id": "e65dc3a9",
    "time": 1673238022856,
    "pages": [{"f18412e2":{"title":"묵시적 타입변환","id":"f18412e2","time":1674618213950,"content":[{"comp":"title","order":"1","enter":"2","text":"묵시적 타입변환","style":[]},{"comp":"check","order":"2","enter":"2","id":"fe996a24","text":"자바스크립트는 필요에 따라 자동적으로 형 변환을 해줍니다. 이를 묵시적 타입변환(implicit type conversion)이라고 합니다.","style":[{"target":"(implicit type conversion)","type":"font-size:small;"},{"target":"묵시적 타입변환","type":"background:#D87122;color:white;padding:2px;"}]},{"comp":"text","order":"3","enter":"0","text":"+ 연산자를 사용한 데이터 조합을 살펴보겠습니다.","style":[]},{"comp":"text","order":"4","enter":"3","text":"이 경우, 숫자보다 문자열이 우선시 되기 때문에 숫자는 자동으로 문자열로 변환된 결과값을 보여줍니다.","style":[]},{"comp":"direction","order":"5","enter":"0","codeId":"94f1b205","targetLine":"","title":"묵시적 타입변환","text":"다음의 코드를 따라서 입력하고 실행해보세요.","bgCode":"","style":[]},{"comp":"aceEditor","order":"6","enter":"12","height":"105","start":"","text":"let a = 50;\nlet b = '50';\nprint(a + b);","style":[]},{"comp":"text","order":"7","enter":"0","text":"위의 숫자 a와 문자열 b를 더하기 연산한 결과는 ","style":[]},{"comp":"text","order":"8","enter":"0","text":"숫자 a가 자동으로 문자열로 변환된 '5050' 입니다.","style":[]},{"comp":"aceEditor","order":"9","enter":"6","height":"105","start":"","text":"let a = 50;   // number\nlet b = '50'; // string\nprint(a + b); // '5050' - string","style":[]},{"comp":"check","order":"10","enter":"0","id":"d8543685","text":"그러나, +를 제외한 -, *, / 의 연산의 경우에는 숫자가 우선시 됩니다.","style":[]},{"comp":"direction","order":"11","enter":"0","codeId":"a038b20d","targetLine":"4","title":"묵시적 타입변환","text":"다음의 4 ~ 6 라인의 코드를 따라서 입력하고 실행해 보세요.","bgCode":"let a = 50;\nlet b = '50';\nprint(a + b);\n","style":[]},{"comp":"aceEditor","order":"12","enter":"10","height":"180","start":"","text":"let a = 50;\nlet b = '50';\nprint(a + b);\nprint(a - b);\nprint(a * b);\nprint(a / b);","style":[]},{"comp":"text","order":"13","enter":"0","text":"실행 결과, + 연산과 달리 숫자형으로 변환된 연산 결과값을 확인할 수 있습니다.","style":[]},{"comp":"aceEditor","order":"14","enter":"6","height":"105","start":"4","text":"print(a - b); // 0\nprint(a * b); // 2500\nprint(a / b); // 1","style":[]}]}},{"46f34120":{"title":"명시적 타입변환","id":"46f34120","time":1674618220594,"content":[{"comp":"title","order":"1","enter":"2","text":"명시적 타입변환","style":[]},{"comp":"check","order":"2","enter":"2","id":"00656f17","text":"명시적 타입변환(explicit type conversion)은 개발자가 의도를 가지고 데이터의 타입을 변환시키는 것을 말합니다.","style":[{"target":"(explicit type conversion)","type":"font-size:small;"},{"target":"명시적 타입변환","type":"background:#566FFF;color:white;padding:2px;"}]},{"comp":"text","order":"3","enter":"5","text":"명시적 타입변환을 위한 몇가지 함수에 대해서 알아보겠습니다.","style":[]},{"comp":"text","order":"4","enter":"0","text":"Number() 함수는 전달된 값을 숫자형으로 변환해 줍니다.","style":[{"target":"Number()","type":"font-size:xx-large;color:green;"},{"target":"숫자형으로 변환","type":"box-shadow: inset 0 -6px 0 #00FC97;"}]},{"comp":"check","order":"5","enter":"3","id":"9ee1edb0","text":"숫자로 변환할 수 없는 값에 대해서는 NaN을 반환합니다.","style":[]},{"comp":"direction","order":"6","enter":"0","codeId":"548091a3","targetLine":"","title":"명시적 타입변환 Number","text":"다음의 코드를 따라서 입력하고 실행해 보세요.","bgCode":"","style":[]},{"comp":"aceEditor","order":"7","enter":"12","height":"105","start":"","text":"let a = '2000';\nlet b = '3';\nprint(Number(a) + Number(b));","style":[]},{"comp":"text","order":"8","enter":"0","text":"실행 결과, Number 함수를 사용해 문자열 a, b가 숫자로 변환되었고","style":[]},{"comp":"check","order":"9","enter":"0","id":"c2d10fec","text":"a + b의 결과값인 숫자 2003이 출력되는 것을 확인할 수 있습니다.","style":[]},{"comp":"aceEditor","order":"10","enter":"6","height":"105","start":"","text":"let a = '2000';\nlet b = '3';\nprint(Number(a) + Number(b)); // 2003","style":[]},{"comp":"text","order":"11","enter":"2","text":"String() 함수는 전달된 값을 문자열 타입으로 변환합니다.","style":[{"target":"String()","type":"font-size:xx-large;color:hotpink;"},{"target":"문자열 타입으로 변환","type":"box-shadow: inset 0 -6px 0 #FFBCD8;"}]},{"comp":"direction","order":"12","enter":"0","codeId":"4950659c","targetLine":"","title":"명시적 타입변환 String","text":"다음의 코드를 따라서 입력하고 실행해보세요.","bgCode":"","style":[]},{"comp":"aceEditor","order":"13","enter":"12","height":"105","start":"","text":"let isTrue = true;\nlet str = String(isTrue);\nprint(isTrue == str);","style":[]},{"comp":"text","order":"14","enter":"0","text":"1라인에서 isTrue 변수에는 불리언 타입의 true가 대입되었습니다. ","style":[]},{"comp":"text","order":"15","enter":"0","text":"2라인 str 변수에는 String함수를 사용해 isTrue 값을 문자열로 변환해 대입했습니다. ","style":[]},{"comp":"check","order":"16","enter":"0","id":"ce3e517f","text":"따라서, 불리언 타입인 isTrue와 문자열 타입인 str이 같은지 비교하면 false가 출력됩니다.","style":[]},{"comp":"aceEditor","order":"17","enter":"6","height":"105","start":"","text":"let isTrue = true;        // boolean\nlet str = String(isTrue); // string\nprint(isTrue == str);     // false","style":[]},{"comp":"text","order":"18","enter":"0","text":"Boolean() 함수는 전달된 값의 truthy, falsy에 따라 불리언 타입으로 변환해줍니다.","style":[{"target":"Boolean()","type":"color:#8B27D8;font-size:xx-large;"},{"target":"불리언 타입으로 변환","type":"box-shadow: inset 0 -6px 0 #E1B7FF;"}]},{"comp":"check","order":"19","enter":"2","id":"eeef9404","text":"truthy한 값은 true나 정수, 실수, 문자열, [], {} 등 값이 있는 데이터를 말합니다.","style":[]},{"comp":"direction","order":"20","enter":"0","codeId":"acbf83a1","targetLine":"","title":"명시적 타입변환 Boolean","text":"에디터를 열고 다음의 코드를 실행해 보세요.","bgCode":"print(Boolean(true), 1);\nprint(Boolean(203), 2);\nprint(Boolean(4.2), 3);\nprint(Boolean('hi'), 4);\nprint(Boolean([]), 5);\nprint(Boolean({}), 6);","style":[]},{"comp":"aceEditor","order":"21","enter":"12","height":"180","start":"","text":"print(Boolean(true), 1);\nprint(Boolean(203), 2);\nprint(Boolean(4.2), 3);\nprint(Boolean('hi'), 4);\nprint(Boolean([]), 5);\nprint(Boolean({}), 6);","style":[]},{"comp":"text","order":"22","enter":"0","text":"모두 truthy한 값들로 true가 출력되는 것을 확인할 수 있습니다.","style":[]},{"comp":"aceEditor","order":"23","enter":"4","height":"180","start":"","text":"print(Boolean(true), 1);  // true\nprint(Boolean(203), 2);   // true\nprint(Boolean(4.2), 3);   // true\nprint(Boolean('hi'), 4);  // true\nprint(Boolean([]), 5);    // true\nprint(Boolean({}), 6);    // true","style":[]},{"comp":"check","order":"24","enter":"2","id":"4c49ece3","text":"falsy한 값은 false, 0, 빈 문자열, null, undefined, NaN을 말합니다.","style":[]},{"comp":"direction","order":"25","enter":"0","codeId":"9f0fa5c2","targetLine":"","title":"명시적 타입변환 Boolean","text":"에디터를 열고 다음의 코드를 실행해 보세요.","bgCode":"print(Boolean(false), 1);\nprint(Boolean(0), 2);\nprint(Boolean(''), 3);\nprint(Boolean(null), 4);\nprint(Boolean(undefined), 5);\nprint(Boolean(NaN), 6);","style":[]},{"comp":"aceEditor","order":"26","enter":"10","height":"180","start":"","text":"print(Boolean(false), 1);\nprint(Boolean(0), 2);\nprint(Boolean(''), 3);\nprint(Boolean(null), 4);\nprint(Boolean(undefined), 5);\nprint(Boolean(NaN), 6);","style":[]},{"comp":"text","order":"27","enter":"0","text":"위 코드에서 Boolean 변환 결과값은 모두 false 인것을 확인할 수 있습니다.","style":[]},{"comp":"aceEditor","order":"28","enter":"6","height":"180","start":"","text":"print(Boolean(false), 1);     // false\nprint(Boolean(0), 2);         // false\nprint(Boolean(''), 3);        // false\nprint(Boolean(null), 4);      // false\nprint(Boolean(undefined), 5); // false\nprint(Boolean(NaN), 6);       // false","style":[]}]}},{"2ed1db20":{"title":"typeof","id":"2ed1db20","time":1674614190627,"content":[{"comp":"title","order":"1","enter":"2","text":"typeof","style":[]},{"comp":"text","order":"2","enter":"0","text":"데이터 타입이 무엇인지 체크하기 위해 typeof 연산자를 사용할 수 있습니다.","style":[{"target":"typeof 연산자","type":"background:#8EFFBD;color: #007261;padding:3px;"}]},{"comp":"check","order":"3","enter":"2","id":"5229b743","text":"typeof는 데이터 타입을 문자열로 반환해 줍니다.","style":[{"target":"데이터 타입을 문자열로 반환","type":"box-shadow: inset 0 -6px 0 #75B3FF;"}]},{"comp":"direction","order":"4","enter":"0","codeId":"b744061e","targetLine":"","title":"typeof","text":"다음의 코드를 따라서 입력하고 실행해 보세요.","bgCode":"","style":[]},{"comp":"aceEditor","order":"5","enter":"12","height":"105","start":"","text":"print(typeof 10);\nprint(typeof 'hello');\nprint(typeof true);","style":[]},{"comp":"text","order":"6","enter":"0","text":"실행 결과, 각각 데이터 타입인 number, string, boolean이 출력되는 것을 확인할 수 있습니다.","style":[]},{"comp":"aceEditor","order":"7","enter":"3","height":"105","start":"","text":"print(typeof 10);       // number\nprint(typeof 'hello');  // string\nprint(typeof true);     // boolean","style":[]},{"comp":"text","order":"8","enter":"0","text":"typeof 연산자의 사용은 위의 코드처럼 typeof 10 과 같이 한 칸 띄워 사용할 수 있는데,","style":[{"target":"typeof 10","type":"padding: 3px;background: #E6E6EF;font-family:IBM Plex Mono;font-size:15px;border-radius:5px;color: #406784;"}]},{"comp":"check","order":"9","enter":"3","id":"90332ff8","text":"typeof(10) 과 같이 괄호를 사용하는 것이 좋습니다.","style":[{"target":"typeof(10)","type":"padding: 3px;background: #E6E6EF;font-family:IBM Plex Mono;font-size:15px;border-radius:5px;color: #406784;"}]},{"comp":"direction","order":"10","enter":"0","codeId":"f2c21931","targetLine":"","title":"typeof","text":"에디터를 열고 다음의 코드를 실행해보세요.","bgCode":"print(typeof 123-456);\nprint(typeof(123-456));","style":[]},{"comp":"aceEditor","order":"11","enter":"10","height":"80","start":"","text":"print(typeof 123-456);\nprint(typeof(123-456));","style":[]},{"comp":"text","order":"12","enter":"0","text":"예를 들어, 위와 같이 typeof 연산자로 123-456의 타입을 체크했을 때","style":[]},{"comp":"text","order":"13","enter":"0","text":"괄호를 사용한 것은 number 로, 사용하지 않은 것은 NaN 으로 출력되는 것을 확인할 수 있습니다.","style":[{"target":"number","type":"padding: 3px;background: #E6E6EF;font-family:IBM Plex Mono;font-size:15px;border-radius:5px;color: #406784;"},{"target":"NaN","type":"padding: 3px;background: #E6E6EF;font-family:IBM Plex Mono;font-size:15px;border-radius:5px;color: #406784;"}]},{"comp":"aceEditor","order":"14","enter":"8","height":"80","start":"","text":"print(typeof 123-456);  // NaN\nprint(typeof(123-456)); // number","style":[]},{"comp":"text","order":"15","enter":"0","text":"typeof 연산자는 조건문과 함께 사용해 타입 체크를 할 수 있습니다.","style":[]},{"comp":"direction","order":"16","enter":"0","codeId":"8e6a9ae0","targetLine":"","title":"typeof","text":"다음의 코드를 따라서 입력하고 실행해 보세요.","bgCode":"","style":[]},{"comp":"aceEditor","order":"17","enter":"10","height":"130","start":"","text":"let count = 30;\nif(typeof(count) == 'number') {\n    print('count는 숫자입니다');\n}","style":[]},{"comp":"text","order":"18","enter":"0","text":"이처럼 typeof 연산자의 결과값은 타입을 나타내는 문자열 입니다. ","style":[{"target":"타입을 나타내는 문자열","type":"box-shadow: inset 0 -6px 0 #ABFF84;"},{"target":"타입","type":"text-emphasis: circle #FF848A;"}]},{"comp":"text","order":"19","enter":"4","text":"typeof 연산자 결과값의 예외적인 몇 가지를 살펴보겠습니다.","style":[]},{"comp":"check","order":"20","enter":"0","id":"d07763ba","text":"먼저, null 타입의 경우 typeof 연산자를 사용하면 'object'가 반환됩니다.","style":[]},{"comp":"direction","order":"21","enter":"0","codeId":"86ec010a","targetLine":"","title":"typeof","text":"다음의 코드를 따라서 입력하고 실행해보세요.","bgCode":"","style":[]},{"comp":"aceEditor","order":"22","enter":"12","height":"80","start":"","text":"let a = null;\nprint(typeof(a));","style":[]},{"comp":"text","order":"23","enter":"0","text":"코드를 실행하면 'null'이 아닌 'object'가 출력되는 것을 확인할 수 있습니다.","style":[]},{"comp":"aceEditor","order":"24","enter":"8","height":"80","start":"","text":"let a = null;    \nprint(typeof(a)); // object","style":[]},{"comp":"text","order":"25","enter":"0","text":"이뿐만 아니라 래퍼 객체(Wrapper Object)로 생성된 값도 'obejct'를 반환합니다.","style":[]},{"comp":"sup","order":"26","enter":"4","text":"* 래퍼 객체(Wrapper Object)란, 원시타입의 값을 감싸는 형태의 객체로, Number(), String(), Boolean(), Symbol() 등이 있습니다.","style":[{"target":"* 래퍼 객체(Wrapper Object)란, 원시타입의 값을 감싸는 형태의 객체로, Number(), String(), Boolean(), Symbol() 등이 있습니다.","type":"font-size:11px;color:#9EA7FF;"}]},{"comp":"direction","order":"27","enter":"0","codeId":"6809ab1f","targetLine":"","title":"typeof","text":"다음의 코드를 실행해 보세요.","bgCode":"","style":[]},{"comp":"aceEditor","order":"28","enter":"10","height":"105","start":"","text":"let isTrue = Boolean(0);\nprint(isTrue);\nprint(typeof(isTrue));","style":[]},{"comp":"text","order":"29","enter":"0","text":"실행 결과, Boolean 함수로 생성한 isTrue 값은 false 이지만,","style":[]},{"comp":"text","order":"30","enter":"0","text":"typeof 결과값은 'object'임을 확인할 수 있습니다.","style":[]},{"comp":"aceEditor","order":"31","enter":"6","height":"105","start":"","text":"let isTrue = Boolean(0);\nprint(isTrue);         // false\nprint(typeof(isTrue)); // object","style":[]},{"comp":"text","order":"32","enter":"2","text":"또, 클래스의 경우 어떻게 출력되는지 살펴보겠습니다.","style":[]},{"comp":"direction","order":"33","enter":"0","codeId":"ce926c94","targetLine":"","title":"typeof","text":"다음의 코드를 따라서 입력하고 실행해 보세요.","bgCode":"","style":[]},{"comp":"aceEditor","order":"34","enter":"12","height":"80","start":"","text":"class home {}\nprint(typeof(home));","style":[]},{"comp":"check","order":"35","enter":"0","id":"c78ab5ca","text":"위 코드의 실행결과, 'function'이 출력되는 것을 확인할 수 있습니다.","style":[]},{"comp":"aceEditor","order":"36","enter":"6","height":"80","start":"","text":"class home {}\nprint(typeof(home)); // function","style":[]},{"comp":"text","order":"37","enter":"8","text":"따라서 typeof 연산자를 통한 타입 체크시 예외적인 사항에 주의해야 합니다.","style":[]}]}},{"e1e8d71c":{"title":"instanceof","id":"e1e8d71c","time":1674625032825,"content":[{"comp":"title","order":"1","enter":"2","text":"instanceof","style":[]},{"comp":"check","order":"2","enter":"0","id":"b018658c","text":"객체의 프로토타입 체인을 검사하기 위해 instanceof 연산자를 사용할 수 있습니다.","style":[{"target":"instanceof 연산자","type":"background:#FFBB5B; color:white; padding:2px;"}]},{"comp":"text","order":"3","enter":"3","text":"생성자의 프로토타입 속성이 객체의 프로토타입 체인에 존재하는지 체크함으로써 상속관계를 확인할 수 있습니다.","style":[]},{"comp":"text","order":"4","enter":"0","text":"다음의 코드로 살펴보겠습니다.","style":[]},{"comp":"aceEditor","order":"5","enter":"2","height":"180","start":"","text":"function Person(name, age){\n    this.name = name;\n    this.age = age;\n}\nconst user = new Person('Amy', 29);\nprint(user instanceof Person);","style":[]},{"comp":"text","order":"6","enter":"0","text":"위의 1~4라인 Person은 생성자 함수입니다. ","style":[]},{"comp":"text","order":"7","enter":"2","text":"5라인에서 'Amy'와 29를 사용해 객체를 생성해 user 변수에 대입했습니다.","style":[]},{"comp":"text","order":"8","enter":"2","text":"user는 다음과 같습니다. ","style":[]},{"comp":"par","order":"9","enter":"3","style":"margin:0 auto;width:500px;padding: 5px;background: #E6E6EF;font-family:IBM Plex Mono;font-size:17px;border-radius:5px;color: #0051DD;","text":"{\n&nbsp;&nbsp;name : 'Amy',\n&nbsp;&nbsp;age: 29\n}"},{"comp":"check","order":"10","enter":"0","id":"b7fe00dc","text":"6라인에서 instanceof 연산자를 사용해 user 객체가 Person 생성자 함수로 생성되었는지 확인합니다.","style":[]},{"comp":"text","order":"11","enter":"0","text":"그 결과, true가 출력되는 것을 확인할 수 있습니다.","style":[]},{"comp":"aceEditor","order":"12","enter":"6","height":"180","start":"","text":"function Person(name, age){\n    this.name = name;\n    this.age = age;\n}\nconst user = new Person('Amy', 29);\nprint(user instanceof Person);  // true","style":[]},{"comp":"text","order":"13","enter":"0","text":"다음의 경우에는 같은 객체 값(5~8라인)이지만 false로 출력됩니다.","style":[{"target":"(5~8라인)","type":"font-size:small;"}]},{"comp":"aceEditor","order":"14","enter":"6","height":"260","start":"","text":"function Person(name, age){\n    this.name = name;\n    this.age = age;\n}\nconst user = {\n    name : 'Amy', \n    age: 29\n};\nprint(user instanceof Person); // false","style":[]},{"comp":"text","order":"15","enter":"2","text":"다만, 참조타입의 최상위 프로토타입이 객체이므로, instanceof Object 는 모두 true를 반환합니다.","style":[{"target":"instanceof Object","type":"padding: 3px;background: #E6E6EF;font-family:IBM Plex Mono;font-size:15px;border-radius:5px;color: #406784;"}]},{"comp":"image","order":"16","enter":"3","width":"300","src":"./lecture/9627cb42/e65dc3a9/4_1.png","style":[]},{"comp":"direction","order":"17","enter":"0","codeId":"52b7b063","targetLine":"10","title":"instanceof 연산자","text":"다음의 코드를 10라인에 추가하고 실행해 보세요.","bgCode":"function Person(name, age){\n    this.name = name;\n    this.age = age;\n}\nconst user = {\n    name : 'Amy', \n    age: 29\n};\nprint(user instanceof Person); // false\n","style":[]},{"comp":"aceEditor","order":"18","enter":"12","height":"50","start":"10","text":"print(user instanceof Object);","style":[]},{"comp":"text","order":"19","enter":"0","text":"실행 결과, true가 출력되는 것을 확인할 수 있습니다.","style":[]},{"comp":"aceEditor","order":"20","enter":"6","height":"50","start":"10","text":"print(user instanceof Object); // true","style":[]}]}},{"91c1b7ee":{"title":"toString","id":"91c1b7ee","time":1674630520248,"content":[{"comp":"title","order":"1","enter":"2","text":"toString","style":[]},{"comp":"text","order":"2","enter":"2","text":"객체의 문자열 변환을 위해 toString 함수를 사용할 수 있습니다.","style":[{"target":"toString","type":"background:#00C2C9;color:white;padding:2px;"}]},{"comp":"direction","order":"3","enter":"0","codeId":"fea1439d","targetLine":"2","title":"toString","text":"다음의 코드를 따라서 입력하고 실행해 보세요.","bgCode":"let a = 35;\n","style":[]},{"comp":"aceEditor","order":"4","enter":"10","height":"105","start":"","text":"let a = 35;\nprint(typeof a);\nprint(typeof a.toString());","style":[]},{"comp":"text","order":"5","enter":"0","text":"변수 a에는 숫자 35가 대입되었습니다. ","style":[]},{"comp":"text","order":"6","enter":"0","text":"2라인 변수 a의 타입은 number , toString을 사용한 3라인은 string 이 출력되는 것을 확인할 수 있습니다.","style":[{"target":"number","type":"padding: 3px;background: #E6E6EF;font-family:IBM Plex Mono;font-size:15px;border-radius:5px;color: #406784;"},{"target":"string","type":"padding: 3px;background: #E6E6EF;font-family:IBM Plex Mono;font-size:15px;border-radius:5px;color: #406784;"}]},{"comp":"aceEditor","order":"7","enter":"6","height":"80","start":"2","text":"print(typeof a);            // number\nprint(typeof a.toString()); // string","style":[]},{"comp":"check","order":"8","enter":"0","id":"1bc23992","text":"그리고 숫자 데이터의 경우, toString 함수에 인수를 사용할 수 있습니다.","style":[{"target":"인수","type":"text-emphasis: circle #FF848A;"}]},{"comp":"direction","order":"9","enter":"0","codeId":"aa0e4ceb","targetLine":"3","title":"toString 인수사용","text":"다음의 코드를 따라서 입력하고, 실행해 보세요.","bgCode":"let a = 35;\nprint(a.toString());\n","style":[]},{"comp":"aceEditor","order":"10","enter":"12","height":"130","start":"","text":"let a = 35;\nprint(a.toString());\nprint(a.toString(2));\nprint(a.toString(8));","style":[]},{"comp":"text","order":"11","enter":"0","text":"위와 같이 숫자 데이터의 toString 함수 사용시, ","style":[]},{"comp":"check","order":"12","enter":"2","id":"07c0d7cf","text":"인수에 숫자를 사용하면 숫자에 해당하는 진수로 변환된 문자열이 반환됩니다.","style":[{"target":"진수로 변환된 문자열","type":"box-shadow: inset 0 -6px 0 #00DEF7;"}]},{"comp":"text","order":"13","enter":"0","text":"실행 결과, 다음과 같이 출력됩니다.","style":[]},{"comp":"aceEditor","order":"14","enter":"6","height":"130","start":"","text":"let a = 35;\nprint(a.toString());  // 35 - 10진수\nprint(a.toString(2)); // 100011 - 2진수\nprint(a.toString(8)); // 23 - 8진수","style":[]},{"comp":"check","order":"15","enter":"2","id":"3bcfd142","text":"toString을 사용하면 참조타입을 출력할 수도 있습니다.","style":[]},{"comp":"direction","order":"16","enter":"0","codeId":"c102677e","targetLine":"4","title":"toString 참조타입 출력","text":"다음의 코드를 따라서 입력하고 실행해 보세요.","bgCode":"const array = [];\nconst date = new Date();\nconst func = function(){};\n","style":[]},{"comp":"aceEditor","order":"17","enter":"12","height":"185","start":"","text":"const array = [];\nconst date = new Date();\nconst func = function(){};\nprint(Object.prototype.toString.call(array));\nprint(Object.prototype.toString.call(date));\nprint(Object.prototype.toString.call(func));","style":[]},{"comp":"check","order":"18","enter":"2","id":"8d7b0f78","text":"Object.prototype.toString.call() 을 사용해 참조타입이 출력된 것을 확인할 수 있습니다.","style":[{"target":"Object.prototype.toString.call()","type":"padding: 3px;background: #E6E6EF;font-family:IBM Plex Mono;font-size:15px;border-radius:5px;color: #406784;"}]},{"comp":"par","order":"19","enter":"7","style":"text-align:center;font-family:IBM Plex Mono;font-size:15px;color:#406784;","text":"[object Array]\n[object Date]\n[object Function]"}]}},{"adaaaf75":{"title":"isArray","id":"adaaaf75","time":1674634379117,"content":[{"comp":"title","order":"1","enter":"2","text":"isArray","style":[]},{"comp":"text","order":"2","enter":"2","text":"특정 데이터가 배열인지 확인하는 isArray 함수에 대해서 알아보겠습니다.","style":[{"target":"isArray 함수","type":"background:#9EB1FF;color:white;padding:2px;"}]},{"comp":"aceEditor","order":"3","enter":"2","height":"80","start":"","text":"let a = [1, 2, 3];\nprint(typeof(a));","style":[]},{"comp":"check","order":"4","enter":"0","id":"3084a09d","text":"위의 변수 a에는 1, 2, 3의 값을 가진 배열이 대입되었습니다.","style":[]},{"comp":"text","order":"5","enter":"5","text":"그리고 typeof 를 사용해 a의 타입을 출력하도록 했습니다.","style":[{"target":"typeof","type":"padding: 3px;background: #E6E6EF;font-family:IBM Plex Mono;font-size:15px;border-radius:5px;color: #406784;"}]},{"comp":"text","order":"6","enter":"0","text":"그 결과, 다음과 같이 'object'를 출력합니다.","style":[]},{"comp":"aceEditor","order":"7","enter":"5","height":"50","start":"2","text":"print(typeof(a)); // object","style":[]},{"comp":"text","order":"8","enter":"0","text":"배열임을 확인하기 위해 instanceof 를 사용할 수도 있습니다.","style":[{"target":"instanceof","type":"padding: 3px;background: #E6E6EF;font-family:IBM Plex Mono;font-size:15px;border-radius:5px;color: #406784;"}]},{"comp":"direction","order":"9","enter":"0","codeId":"01847082","targetLine":"3","title":"isArray","text":"3라인에 다음과 같이 코드를 추가 입력하고 실행해 보세요.","bgCode":"let a = [1, 2, 3];\nprint(typeof(a));\n","style":[]},{"comp":"aceEditor","order":"10","enter":"10","height":"50","start":"3","text":"print(a instanceof Array);","style":[]},{"comp":"text","order":"11","enter":"0","text":"실행하면 배열임을 확인하는 true가 출력됩니다.","style":[]},{"comp":"aceEditor","order":"12","enter":"6","height":"50","start":"3","text":"print(a instanceof Array); // true","style":[]},{"comp":"text","order":"13","enter":"3","text":"그러나, instanceof의 경우, 같은 페이지가 아닌 다른 페이지에서 생성된 배열인 경우에는 올바르게 작동하지 않을 수 있습니다.","style":[]},{"comp":"text","order":"14","enter":"2","text":"따라서, Array.isArray() 를 사용해 보다 명확하게 배열인지 확인할 수 있습니다.","style":[{"target":"Array.isArray()","type":"padding: 3px;background: #E6E6EF;font-family:IBM Plex Mono;font-size:15px;border-radius:5px;color: #406784;"}]},{"comp":"direction","order":"15","enter":"0","codeId":"6e5b6f02","targetLine":"2","title":"isArray","text":"다음의 코드를 따라서 입력하고 실행해 보세요.","bgCode":"let a = [1, 2, 3];\n","style":[]},{"comp":"aceEditor","order":"16","enter":"12","height":"80","start":"","text":"let a = [1, 2, 3];\nprint(Array.isArray(a));","style":[]},{"comp":"check","order":"17","enter":"0","id":"870261a7","text":"실행하면 true가 출력되는 것을 확인할 수 있습니다.","style":[]},{"comp":"aceEditor","order":"18","enter":"8","height":"50","start":"2","text":"print(Array.isArray(a)); // true","style":[]},{"comp":"quiz","order":"19","enter":"4","style":[],"quiz":[{"type":"multiple","id":"93a63547","answer":"3","question":"자바스크립트는 필요에 따라 자동적으로 데이터의 형변환을 합니다. 다음 코드의 실행 결과는 무엇인가요?\n<pre style='margin-top:10px;font-size:22px;color:black;padding: 10px;background:rgba(190,207,216,0.6);'>let a = 20;  \nlet b = '23';\nprint(a + b);</pre>","example":["NaN","43","'2023'","undefined"]},{"type":"multiple","id":"679c13d4","answer":"2","question":"다음 중 instanceof 연산자와 typeof 연산자의 차이점으로 옳은 것은 무엇인가요?","example":["두 연산자는 차이점이 없다.","instanceof 연산자는 객체의 프로토타입 체인상에 특정 생성자 함수가 존재하는지 판별하는 반면, typeof 연산자는 피연산자의 데이터 타입을 반환한다.","typeof 연산자는 객체의 프로토타입 체인상에 특정 생성자 함수가 존재하는지 판별하는 반면, instanceof 연산자는 피연산자의 데이터 타입을 반환한다.","typeof 연산자는 불리언 값은 반환하고, instanceof 연산자는 문자열을 반환한다."]}]},{"comp":"completeBtn","order":"20","enter":"4","id":"eb5eae16","style":[]},{"comp":"ending","order":"21","enter":"4","style":[]}]}}],
    "icon": "undraw_completed_tasks_vs6q.svg"
}