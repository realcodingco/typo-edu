{
    "title": "함수 1",
    "id": "8f0c2b45",
    "time": 1673238035622,
    "pages": [{"f0761077":{"title":"함수란 무엇인가","id":"f0761077","time":1674699575161,"content":[{"comp":"title","order":"1","enter":"2","text":"함수란 무엇인가","style":[]},{"comp":"text","order":"2","enter":"2","text":"함수(Function)는 어떤 동작을 수행하기 위한 문(statement)을 하나로 모은 코드 블록입니다.","style":[{"target":"(Function)","type":"font-size:small;"},{"target":"함수","type":"font-size:xx-large;color: #0079BF;"},{"target":"어떤 동작을 수행하기 위한 문(statement)을 하나로 모은 코드 블록","type":"box-shadow: inset 0 -4px 0 #0079BF;"},{"target":"(statement)","type":"font-size:small;"}]},{"comp":"check","order":"3","enter":"0","id":"680dcab2","text":"함수는 이름과 매개변수를 가질 수 있으며, 필요할 때에 호출할 수 있습니다.","style":[{"target":"이름","type":"color:#CD00D8;"},{"target":"매개변수","type":"color:#CD00D8;"}]},{"comp":"text","order":"4","enter":"2","text":"필요에 따라 여러번 호출할 수 있기 때문에, 코드의 재사용을 가능하도록 해 함수를 활용하면 효율적인 프로그래밍을 할 수 있습니다.","style":[]},{"comp":"check","order":"5","enter":"0","id":"4a1b71b3","text":"함수도 객체이므로, 변수, 객체, 배열 등에 저장할 수 있고, ","style":[]},{"comp":"check","order":"6","enter":"3","id":"d25d8598","text":"다른 함수의 인수로 사용하거나 반환값이 될 수 있습니다.","style":[]},{"comp":"text","order":"7","enter":"3","text":"함수를 만들기 위해서는 키워드 function을 사용합니다.","style":[{"target":"function","type":"color:#FF726B;font-size:x-large;"}]},{"comp":"text","order":"8","enter":"2","text":"다음은 함수의 기본 사용 입니다.","style":[]},{"comp":"par","order":"9","enter":"3","style":"margin:0 auto;background: #282A35;color:white;border-radius:10px;padding:10px;font-family:IBM Plex Mono;font-size:17px;","text":"<font color=#6571A0>// 함수 생성(정의)</font>\n<font color=#EC7FC1>function</font> 함수명(<font color=#FFBC6B >매개변수</font>) <font color=#00A1FF>{</font>\n&nbsp;&nbsp;&nbsp;&nbsp;수행문;\n<font color=#00A1FF>}</font>\n\n<font color=#6571A0>// 함수 사용(호출)</font>\n함수명<font color=#00A1FF>(</font>인수<font color=#00A1FF>)</font>;\n"},{"comp":"text","order":"10","enter":"0","text":"function 키워드와 함수명, 매개변수를 차례로 입력하고, ","style":[]},{"comp":"text","order":"11","enter":"3","text":"중괄호로 수행문 코드를 묶어 함수를 생성합니다.","style":[]},{"comp":"check","order":"12","enter":"4","id":"5ac7aedd","text":"함수를 사용(호출)할 때는 함수명과 인수를 사용합니다.","style":[]},{"comp":"check","order":"13","enter":"3","id":"77842c1f","text":"이와 같은 함수 정의 방식을 '함수 선언문'이라고 합니다.","style":[{"target":"'함수 선언문'","type":"background:#4EBDD8;color:white;font-family:sans-serif;font-size:18px;"}]},{"comp":"text","order":"14","enter":"6","text":"함수 정의 방식에는 함수 선언문 이외에도 몇가지 있습니다. 어떤 것들이 있는지 차례대로 살펴보겠습니다.","style":[]}]}},{"e13c4fbf":{"title":"함수정의 : 함수 선언문","id":"e13c4fbf","time":1674701189950,"content":[{"comp":"title","order":"1","enter":"2","text":"함수정의 : 함수 선언문","style":[]},{"comp":"text","order":"2","enter":"2","text":"함수 선언문(Function declaration) 방식으로 정의한 함수에 대해 살펴보겠습니다.","style":[{"target":"(Function declaration)","type":"font-size:small;"},{"target":"함수 선언문","type":"font-family:sans-serif;font-size:18px;background:#00C2C9;color:white;padding:2px;"}]},{"comp":"text","order":"3","enter":"0","text":"다음의 코드는 함수 선언문의 예시 입니다.","style":[]},{"comp":"aceEditor","order":"4","enter":"3","height":"105","start":"","text":"function plus(a, b) {\n    return a + b;\n}","style":[]},{"comp":"check","order":"5","enter":"3","id":"0525c79b","text":"위의 코드에서 함수명은 plus 이며, 함수 선언문에서는 함수명을 생략할 수 없습니다.","style":[{"target":"함수명을 생략할 수 없습니다","type":"box-shadow: inset 0 -6px 0 #C34CFF;"}]},{"comp":"check","order":"6","enter":"0","id":"af85e9a9","text":"매개변수는 콤마로 구분된 0개 이상의 목록을 괄호로 감싸야 합니다.","style":[]},{"comp":"text","order":"7","enter":"3","text":"자바스크립트에서는 함수의 매개변수 타입을 별도로 작성하지 않습니다.","style":[]},{"comp":"text","order":"8","enter":"0","text":"수행문의 집합은 중괄호로 감싸고,","style":[]},{"comp":"check","order":"9","enter":"3","id":"8ae7a3eb","text":"return문을 사용해 결과값을 반환할 수 있으며 이를, 반환값이라고 합니다.","style":[{"target":"반환값","type":"text-emphasis: circle #00AF8F;font-family:sans-serif;font-size:17px;color:#00AF8F;"}]},{"comp":"text","order":"10","enter":"4","text":"즉, plus 함수는 2개 매개변수(a, b)를 전달받아 두 수를 더한 결과값을 반환합니다.","style":[]},{"comp":"text","order":"11","enter":"0","text":"그렇다면, 직접 코드를 작성해 볼까요?","style":[]},{"comp":"direction","order":"12","enter":"16","codeId":"5593fcb4","targetLine":"","title":"함수 선언문","text":"두 수를 전달받아 두 수를 곱한 결과값을 반환하는 함수 multiple을 함수 선언문으로 작성해 보세요.","bgCode":"","style":[]},{"comp":"text","order":"13","enter":"0","text":"다음과 같이 작성할 수 있습니다.","style":[]},{"comp":"aceEditor","order":"14","enter":"4","height":"105","start":"","text":"function multiple(a, b) {\n    return a * b;\n}","style":[]},{"comp":"direction","order":"15","enter":"0","codeId":"332010c3","targetLine":"4","title":"함수 선언문","text":"함수가 제대로 동작하는지 다음의 코드를 추가하고 실행해 보세요.","bgCode":"function multiple(a, b) {\n    return a * b;\n}\n","style":[]},{"comp":"aceEditor","order":"16","enter":"12","height":"50","start":"4","text":"print(mutiple(10, 10));","style":[]},{"comp":"text","order":"17","enter":"0","text":"10과 10을 곱한 결과값을 반환 받도록 mutiple 함수를 호출했습니다.","style":[]},{"comp":"text","order":"18","enter":"2","text":"코드를 실행하면 다음과 같이 출력되어 정상적으로 동작하는 것을 알 수 있습니다.","style":[]},{"comp":"par","order":"19","enter":"6","style":"margin:0 auto;padding: 5px;background: #E6E6EF;font-family:IBM Plex Mono;font-size:17px;border-radius:5px;color: #0051DD;","text":">> 100 <font size=2 color=gray>// 10 * 10</font>"}]}},{"7420a8c3":{"title":"함수정의 : 함수 표현식","id":"7420a8c3","time":1674702943369,"content":[{"comp":"title","order":"1","enter":"2","text":"함수정의 : 함수 표현식","style":[]},{"comp":"check","order":"2","enter":"0","id":"f1b63bdc","text":"함수 표현식(Function expression)은 함수 리터럴 방식으로 함수를 정의하는 방식을 말합니다.","style":[{"target":"(Function expression)","type":"font-size:small;"},{"target":"함수 표현식","type":"font-family:sans-serif;font-size:18px;background:#59000B;color:white;padding:2px;"}]},{"comp":"text","order":"3","enter":"2","text":"이는 하나의 표현식으로 변수에 할당할 수 있습니다.","style":[]},{"comp":"check","order":"4","enter":"0","id":"601aefd5","text":"따라서, 함수 표현식의 정의는 함수 선언문과 달리, 함수명을 생략할 수 있습니다.","style":[]},{"comp":"text","order":"5","enter":"2","text":"이를 익명함수(anonymous function)라고 합니다.","style":[{"target":"(anonymous function)","type":"font-size:small;"},{"target":"익명함수","type":"box-shadow: inset 0 -4px 0 #FF9400;"}]},{"comp":"text","order":"6","enter":"0","text":"다음은 함수 표현식 정의의 예시 입니다.","style":[]},{"comp":"aceEditor","order":"7","enter":"6","height":"105","start":"","text":"let plus = function(a, b) {\n    return a + b;\n};","style":[]},{"comp":"text","order":"8","enter":"0","text":"함수명 생략 여부에 따라 기명 함수 표현식과 익명  함수 표현식으로 나뉘는데, ","style":[{"target":"기명 함수 표현식","type":"box-shadow: inset 0 -4px 0 #9D89FF;"},{"target":"익명  함수 표현식","type":"box-shadow: inset 0 -4px 0 #9D89FF;"}]},{"comp":"check","order":"9","enter":"4","id":"03f39c60","text":"기명 함수 표현식의 경우, 함수명이 아닌 함수 표현식이 할당된 변수명을 사용해 호출해야 합니다.","style":[]},{"comp":"direction","order":"10","enter":"0","codeId":"c676f3e1","targetLine":"","title":"기명 함수 표현식","text":"에디터를 열고, 다음의 코드를 실행해 보세요.","bgCode":"let add = function plus(a, b) {\n    return a + b;\n};\nplus(3, 5);","style":[]},{"comp":"aceEditor","order":"11","enter":"10","height":"130","start":"","text":"let add = function plus(a, b) {\n    return a + b;\n};\nplus(3, 5);","style":[]},{"comp":"text","order":"12","enter":"0","text":"위는 기명 함수 표현식으로 함수명을 사용해 호출하면 오류가 발생합니다.","style":[]},{"comp":"check","order":"13","enter":"3","id":"e21009a3","text":"따라서, 함수명이 아닌 변수명 add를 사용해 호출해야 합니다.","style":[{"target":"변수명 add를 사용해 호출","type":"box-shadow: inset 0 -6px 0 #F200FF;"}]},{"comp":"direction","order":"14","enter":"0","codeId":"b6b63c50","targetLine":"","title":"기명 함수 표현식","text":"4라인의 코드를 변수명 add를 사용해 호출하도록 수정하고 실행해 보세요.","bgCode":"let add = function plus(a, b) {\n    return a + b;\n};\nplus(3, 5);","style":[]},{"comp":"aceEditor","order":"15","enter":"12","height":"50","start":"4","text":"add(3, 5);","style":[]},{"comp":"check","order":"16","enter":"2","id":"3a0da4bb","text":"변수명을 사용해 호출하면 오류가 발생하지 않음을 확인할 수 있습니다.","style":[]},{"comp":"par","order":"17","enter":"4","style":"margin:0 auto;padding: 5px;background: #E6E6EF;font-family:IBM Plex Mono;font-size:17px;border-radius:5px;color: #0051DD;","text":">> 8 <font size=2 color=gray>// 3 + 5</font>"},{"comp":"text","order":"18","enter":"6","text":"따라서, 함수 표현식은 함수명이 없는 익명 함수가 사용되는 것이 일반적입니다.","style":[]}]}},{"5ed58c55":{"title":"함수정의 : Function 생성자","id":"5ed58c55","time":1674702969313,"content":[{"comp":"title","order":"1","enter":"2","text":"함수정의 : Function 생성자","style":[]},{"comp":"text","order":"2","enter":"2","text":"Function 생성자로 함수를 정의하는 문법은 다음과 같습니다.","style":[{"target":"Function 생성자","type":"font-family:sans-serif;font-size:18px;background:#008738;color:white;padding:2px;"}]},{"comp":"par","order":"3","enter":"3","style":"margin:0 auto;text-align:center;padding:10px 3px;background: #E6E6EF;font-family:IBM Plex Mono;font-size:17px;border-radius:5px;color: #406784;","text":"new Function(매개변수1, 매개변수2, ..., 수행문)"},{"comp":"text","order":"4","enter":"0","text":"코드로 살펴보겠습니다.","style":[]},{"comp":"aceEditor","order":"5","enter":"3","height":"80","start":"","text":"let plus = new Function('a', 'b', 'return a + b');\nprint(plus(3, 5));","style":[]},{"comp":"text","order":"6","enter":"0","text":"위는 new Function 생성자를 사용해 plus 함수를 정의한 예시입니다.","style":[]},{"comp":"text","order":"7","enter":"5","text":"이와 같은 함수 정의는 일반적으로 사용하지 않지만,<br>앞에서 살펴본 함수 선언문과 함수 표현식은 이러한 생성자 함수 정의의 축약이라고 볼 수 있습니다. ","style":[]},{"comp":"text","order":"8","enter":"2","text":"지금까지 살펴본 함수 정의 방식에는 동작의 차이가 있습니다. ","style":[]},{"comp":"check","order":"9","enter":"2","id":"52f24992","text":"선언 위치와 상관없이 어느 곳에서든 호출이 가능한 것을 함수 호이스팅이라고 합니다.","style":[{"target":"함수 호이스팅","type":"font-size:x-large;color:#A70FFF;"}]},{"comp":"direction","order":"10","enter":"0","codeId":"29ac5434","targetLine":"","title":"함수 호이스팅","text":"다음의 코드를 따라서 입력하고 실행해 보세요.","bgCode":"","style":[]},{"comp":"aceEditor","order":"11","enter":"10","height":"130","start":"","text":"sayHi();\nfunction sayHi() {\n    alert('hi');\n}","style":[]},{"comp":"text","order":"12","enter":"2","text":"코드를 실행하면, 함수 선언 전에 1라인에서 함수를 호출했지만,<br>\n정상적으로 동작해 메시지창이 뜨는 것을 확인할 수 있습니다.","style":[]},{"comp":"par","order":"13","enter":"4","style":"","text":"<div style=\"background:white;box-shadow: 0 3px 7px rgba(0, 0, 0, 0.3);font-size:14px;border:1px solid rgba(0, 0, 0, 0.3);padding:10px 20px 20px;border-radius:4px;margin:0 auto;\">페이지 내용:\nhi\n<button style='padding:0px 10px;float:right;border:1px solid rgba(0, 0, 0, 0.1);border-radius:4px;margin:4px;'>확인</button>\n</div>"},{"comp":"text","order":"14","enter":"0","text":"그렇다면 함수 표현식은 어떤지 살펴보겠습니다.","style":[]},{"comp":"direction","order":"15","enter":"0","codeId":"c208b61c","targetLine":"","title":"함수 호이스팅","text":"다음의 코드를 따라서 입력하고 실행해 보세요.","bgCode":"","style":[]},{"comp":"aceEditor","order":"16","enter":"10","height":"130","start":"","text":"sayHi();\nlet sayHi = function() {\n    alert('hi');\n};","style":[]},{"comp":"text","order":"17","enter":"2","text":"초기화 전에는 'sayHi'에 접근할 수 없다는 오류 메시지를 확인할 수 있습니다.","style":[{"target":"초기화 전에는 'sayHi'에 접근할 수 없다","type":"color:red;"}]},{"comp":"par","order":"18","enter":"3","style":"margin:0 auto;padding: 5px;background: #E6E6EF;font-family:IBM Plex Mono;font-size:15px;border-radius:5px;color: #0051DD;","text":">> <font color=red>[ERROR] Cannot access 'sayHi' before initialization</font>"},{"comp":"direction","order":"19","enter":"10","codeId":"f931706f","targetLine":"1","title":"함수 호이스팅","text":"1라인의 함수 호출 코드를 5라인으로 이동시키고 실행해 보세요.","bgCode":"sayHi();\nlet sayHi = function() {\n    alert('hi');\n};\n","style":[]},{"comp":"text","order":"20","enter":"0","text":"정상적으로 동작하는 것을 확인할 수 있습니다.","style":[]},{"comp":"aceEditor","order":"21","enter":"3","height":"150","start":"","text":"\nlet sayHi = function() { // 함수표현식의 선언\n    alert('hi');\n};\nsayHi(); // 함수 호출","style":[]},{"comp":"check","order":"22","enter":"6","id":"b4d0d97d","text":"이는 함수 표현식은 함수 호이스팅이 아니라, 변수 호이스팅이 이뤄졌기 때문에 발생하는 차이입니다.","style":[]}]}},{"1d7455a4":{"title":"return","id":"1d7455a4","time":1674709513777,"content":[{"comp":"title","order":"1","enter":"2","text":"return","style":[]},{"comp":"text","order":"2","enter":"3","text":"함수는 수행 결과값을 반환할 수 있습니다. 이때 사용하는 키워드는 return 입니다.","style":[{"target":"return","type":"font-family:sans-serif;font-size:18px;background:#D80412;color:white;padding:2px;"}]},{"comp":"check","order":"3","enter":"0","id":"f182149e","text":"반환은 생략이 가능합니다. 이 경우, undefined를 암묵적으로 반환합니다.","style":[]},{"comp":"aceEditor","order":"4","enter":"3","height":"80","start":"","text":"function hi(){}\nprint(hi()); // undefined ","style":[]},{"comp":"check","order":"5","enter":"0","id":"79ba2a92","text":"배열을 사용해 하나 이상을 값을 반환할 수도 있습니다.","style":[]},{"comp":"aceEditor","order":"6","enter":"3","height":"180","start":"","text":"function exchange(won) {\n    let dollar = won * 0.00081;\n    let yen = won * 0.11;\n    return [dollar + '달러', yen + '엔']; // 여러 값 반환\n}\nlet result = exchange(10000);","style":[]},{"comp":"check","order":"7","enter":"2","id":"a37e657c","text":"함수 수행문 중에 return문을 만나면 값을 반환하고, 실행을 중단합니다.","style":[]},{"comp":"direction","order":"8","enter":"0","codeId":"fdc3a4c9","targetLine":"","title":"함수 return","text":"다음의 코드를 따라서 입력하고 실행해 보세요.","bgCode":"","style":[]},{"comp":"aceEditor","order":"9","enter":"10","height":"180","start":"","text":"function play() {\n    print(1);\n    return;\n    print(2);\n}\nplay();","style":[]},{"comp":"text","order":"10","enter":"0","text":"코드실행 결과, return문 이전의 숫자 1은 출력되지만, (2라인)","style":[{"target":"(2라인)","type":"font-size:small;"}]},{"comp":"text","order":"11","enter":"0","text":"return문 이후의 숫자 2는 출력되지 않습니다. (4라인)","style":[{"target":"(4라인)","type":"font-size:small;"}]},{"comp":"aceEditor","order":"12","enter":"3","height":"180","start":"","text":"function play() {\n    print(1); // 1\n    return;   // 실행 중단\n    print(2);\n}\nplay();","style":[]},{"comp":"text","order":"13","enter":"6","text":"이와 같이 return문을 함수 내에 적절히 사용해 함수로 처리된 결과값을 전달할 수도 있습니다.","style":[]}]}},{"8d17d405":{"title":"앱 실습","id":"8d17d405","time":1679389203093,"content":[{"comp":"title","order":"1","enter":"2","text":"앱 실습","style":[]},{"comp":"text","order":"2","enter":"2","text":"간단한 실습을 통해 계산기 앱을 완성해 보겠습니다.","style":[]},{"comp":"text","order":"3","enter":"0","text":"먼저, 화면에 계산기를 붙여보겠습니다. ","style":[]},{"comp":"practiceDirection","order":"4","enter":"0","codeId":"4b55adde","targetApp":"Calculate","title":"","targetLine":"","bgCode":"","text":"다음의 코드를 따라서 입력하고 실행해 보세요.","style":[]},{"comp":"aceEditor","order":"5","enter":"12","height":"50","start":"","text":"appendCalculator();","style":[]},{"comp":"text","order":"6","enter":"2","text":"계산기의 UI를 살펴보면 다음과 같습니다.","style":[]},{"comp":"image","order":"7","enter":"3","width":"300","src":"./lecture/9627cb42/8f0c2b45/6_1.png","style":[]},{"comp":"check","order":"8","enter":"0","id":"8720bab1","text":"① 계산기 버튼 클릭시 계산식이 입력되고, 결과값이 노출되는 창 입니다.","style":[]},{"comp":"text","order":"9","enter":"2","text":"이 창은 resultWin 변수로 가리킬 수 있습니다.","style":[]},{"comp":"check","order":"10","enter":"2","id":"7d9b33b1","text":"② 숫자와 사칙연산기호, 소수점 버튼 영역입니다. 이 버튼들을 클릭하면 클릭한 버튼을 텍스트가 연산식으로 resultWin에 출력됩니다.","style":[]},{"comp":"check","order":"11","enter":"2","id":"8c92f0ec","text":"③ c 버튼은 resultWin의 텍스트를 지우고 계산기를 초기화 시킵니다.","style":[]},{"comp":"check","order":"12","enter":"5","id":"772d4d0c","text":"④ = 버튼은 계산식을 연산하고, 그 결과를 resultWin에 출력합니다.","style":[]},{"comp":"text","order":"13","enter":"2","text":"다음은 실습앱에서 사용할 변수와 함수입니다.","style":[]},{"comp":"postit","order":"14","enter":"3","text":"<pre>appendCalculator();</pre> 계산기 UI를 화면에 붙여줍니다.<hr><pre>insertFormula(fn);</pre> 계산기의 버튼(숫자, 사칙연산기호, 소수점) 클릭 이벤트를 설정합니다.<hr><pre>clearResult(fn);</pre> c 버튼의 클릭 이벤트를 설정합니다. <hr><pre>calculateResult(fn);</pre> = 버튼의 클릭 이벤트를 설정합니다. <hr><pre>resultWin</pre> 계산식과 계산결과가 출력될 입력창을 가리킵니다. ","style":[]},{"comp":"text","order":"15","enter":"2","text":"그럼, 2번 영역의 버튼들을 클릭하면 resultWin에 출력되도록 해보겠습니다.","style":[]},{"comp":"direction","order":"16","enter":"0","codeId":"debd96d2","targetLine":"2","title":"계산기 앱","text":"다음의 코드를 따라서 입력하고 실행 후, 숫자 버튼을 클릭해보세요.","bgCode":"appendCalculator();\n","style":[]},{"comp":"aceEditor","order":"17","enter":"12","height":"105","start":"2","text":"insertFormula(num => {\n    resultWin.value += num;\n});","style":[]},{"comp":"text","order":"18","enter":"2","text":"insertFormula는 각 버튼이 클릭됐을 때, resultWin에 출력합니다.<br>여기에서 num은 각 버튼의 텍스트를 가리킵니다.","style":[]},{"comp":"aceEditor","order":"19","enter":"2","height":"50","start":"3","text":"    resultWin.value += num;","style":[]},{"comp":"text","order":"20","enter":"","text":"그리고 resultWin은 읽기 전용의 input 요소 입니다.","style":[]},{"comp":"check","order":"21","enter":"2","id":"4a2e14c6","text":"input 요소의 텍스트 변경은 value 속성값 변경으로 할 수 있습니다.","style":[{"target":"value 속성값 변경","type":"box-shadow: inset 0 -8px 0 #ABFF84;"}]},{"comp":"text","order":"22","enter":"2","text":"따라서, insertFormula의 함수 실행으로 버튼 클릭이 다음과 같이 동작합니다.","style":[]},{"comp":"image","order":"23","enter":"5","width":"300","src":"./lecture/9627cb42/8f0c2b45/6_2.gif","style":[]},{"comp":"text","order":"24","enter":"2","text":"이번에는 초기화 기능의 C 버튼 동작을 완성해 보겠습니다.","style":[]},{"comp":"direction","order":"25","enter":"0","codeId":"fdbebcba","targetLine":"5","title":"계산기 앱","text":"다음의 코드를 따라서 입력하고 실행해 보세요.","bgCode":"appendCalculator();\ninsertFormula(num => {\n    resultWin.value += num;\n});\n","style":[]},{"comp":"aceEditor","order":"26","enter":"12","height":"105","start":"5","text":"clearResult(() => {\n    resultWin.value = '';\n});","style":[]},{"comp":"check","order":"27","enter":"2","id":"e13a3565","text":"resultWin의 텍스트를 지워야 하므로, value 값에 빈 문자열을 대입합니다.","style":[]},{"comp":"text","order":"28","enter":"2","text":"따라서, c 버튼을 클릭하면 다음과 같이 텍스트가 지워집니다.","style":[]},{"comp":"image","order":"29","enter":"5","width":"300","src":"./lecture/9627cb42/8f0c2b45/6_3.gif","style":[]},{"comp":"text","order":"30","enter":"2","text":"마지막으로 계산식의 결과값을 출력하는 = 버튼의 동작을 완성해 보겠습니다.","style":[]},{"comp":"check","order":"31","enter":"2","id":"505e9357","text":"eval 함수는 문자열 식의 값을 반환합니다.","style":[{"target":"eval","type":"padding: 3px;background: #E6E6EF;font-family:IBM Plex Mono;font-size:15px;border-radius:5px;color: #406784;"},{"target":"문자열 식의 값을 반환","type":"box-shadow: inset 0 -12px 0 #CEFF7A;"}]},{"comp":"direction","order":"32","enter":"0","codeId":"f5878284","targetLine":"8","title":"계산기 앱","text":"다음의 코드를 따라서 입력하고 실행해 보세요.","bgCode":"appendCalculator();\ninsertFormula(num => {\n    resultWin.value += num;\n});\nclearResult(() => {\n    resultWin.value = '';\n});\n","style":[]},{"comp":"aceEditor","order":"33","enter":"12","height":"130","start":"8","text":"calculateResult(() => {\n    var result = eval(resultWin.value);\n    resultWin.value = result;\n});","style":[]},{"comp":"text","order":"34","enter":"","text":"계산기의 연산식은 resultWin의 value 값과 같습니다.","style":[]},{"comp":"check","order":"35","enter":"","id":"79eceb02","text":"따라서 eval 함수로 해당 문자열 식을 계산해 result 변수에 대입합니다. ","style":[]},{"comp":"aceEditor","order":"36","enter":"2","height":"50","start":"9","text":"    var result = eval(resultWin.value);","style":[]},{"comp":"check","order":"37","enter":"","id":"09f9047e","text":"그리고 resultWin의 value 값에 result를 대입해 연산 결과값을 출력합니다. ","style":[]},{"comp":"aceEditor","order":"38","enter":"3","height":"50","start":"10","text":"    resultWin.value = result;","style":[]},{"comp":"text","order":"39","enter":"2","text":"계산기 앱이 완성 되었습니다.","style":[]},{"comp":"image","order":"40","enter":"5","width":"300","src":"./lecture/9627cb42/8f0c2b45/6_4.gif","style":[]},{"comp":"text","order":"41","enter":"2","text":"각 버튼을 클릭해 계산기 앱을 사용해 보면, 기본적인 기능이 정상적으로 동작하는 것을 확인할 수 있습니다.","style":[]},{"comp":"text","order":"42","enter":"3","text":"계산기의 각 기능을 함수로 정의해 코드로 작성해 보았습니다. 이처럼 필요한 기능을 함수 단위로 만들어 사용하면 보다 효율적인 작업을 할 수 있습니다. ","style":[]},{"comp":"quiz","order":"43","enter":"4","style":[],"quiz":[{"type":"multiple","id":"944f92e7","answer":"2","question":"다음 중 함수 표현식과 함수 선언문에서 함수 호이스팅이 적용되는 방식의 차이에 대한 설명으로 옳은 것은 무엇인가요?","example":["함수 표현식은 변수 호이스팅이 적용되어 변수가 먼저 선언되기 전에 함수를 호출하면 에러가 발생하지만, 함수 선언문은 호이스팅이 적용되어 변수가 먼저 선언되기 전에 함수를 호출해도 정상적으로 동작한다.","함수 표현식은 호이스팅이 적용되지 않아 변수가 먼저 선언되기 전에 함수를 호출하면 에러가 발생하지만, 함수 선언문은 호이스팅이 적용되어 변수가 먼저 선언되기 전에 함수를 호출해도 정상적으로 동작한다.","함수 표현식과 함수 선언문 모두 함수 호이스팅이 적용되는 방식이 같다.","함수 표현식과 함수 선언문 모두 함수 호이스팅이 적용되지 않는다."]},{"type":"multiple","id":"77db52f7","answer":"2","question":"다음 중 함수를 정의하는 방법에 대한 설명으로 옳지 못한 것은?","example":["함수는 function 키워드를 사용해 정의할 수 있다.","함수의 이름은 반드시 있어야 한다.","함수는 값을 반환하는 return 문을 사용하거나 반환하지 않을 수도 있다.","함수의 매개변수 타입을 별도로 작성하지 않아도 된다."]}]},{"comp":"completeBtn","order":"44","enter":"4","id":"4fd1201b","style":[]},{"comp":"ending","order":"45","enter":"4","style":[]}]}}],
    "icon": "undraw_functions_re_alho.svg"
}